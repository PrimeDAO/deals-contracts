{
  "address": "0xF43F28bC7D7ac20CB0D1EB9b36a41ad2E92798fD",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "processID",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "depositID",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "Deposited",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "actionId",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "claimed",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "dao",
          "type": "address"
        }
      ],
      "name": "VestingClaimed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "processID",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "vestingStart",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "vestingCliff",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "vestingDuration",
          "type": "uint256"
        }
      ],
      "name": "VestingStarted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "processID",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "depositID",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Withdrawn",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "availableModuleBalances",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "baseContract",
      "outputs": [
        {
          "internalType": "contract IBaseContract",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_id",
          "type": "bytes32"
        }
      ],
      "name": "claimDealVestings",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "claimVestings",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "dao",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_processID",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "deposit",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "deposits",
      "outputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "used",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "time",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_processID",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        }
      ],
      "name": "getAvailableProcessBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        }
      ],
      "name": "getBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_processID",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "_depositID",
          "type": "uint256"
        }
      ],
      "name": "getDeposit",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_processID",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "_fromDepositID",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_toDepositID",
          "type": "uint256"
        }
      ],
      "name": "getDepositRange",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "senders",
          "type": "address[]"
        },
        {
          "internalType": "address[]",
          "name": "tokens",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "amounts",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256[]",
          "name": "usedAmounts",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256[]",
          "name": "times",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_module",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "_id",
          "type": "uint256"
        }
      ],
      "name": "getProcessID",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_processID",
          "type": "bytes32"
        }
      ],
      "name": "getTotalDepositCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        }
      ],
      "name": "getVestedBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_processID",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "_user",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        }
      ],
      "name": "getWithdrawableAmountOfUser",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_dao",
          "type": "address"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_newBaseContract",
          "type": "address"
        }
      ],
      "name": "migrateBaseContract",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_processID",
          "type": "bytes32"
        },
        {
          "internalType": "address[]",
          "name": "_tokens",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "_amounts",
          "type": "uint256[]"
        }
      ],
      "name": "multipleDeposits",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_processID",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        }
      ],
      "name": "registerDeposit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_processID",
          "type": "bytes32"
        },
        {
          "internalType": "address[]",
          "name": "_tokens",
          "type": "address[]"
        }
      ],
      "name": "registerDeposits",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_processID",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "sendToModule",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_actionId",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_vestingCliff",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_vestingDuration",
          "type": "uint256"
        }
      ],
      "name": "startVesting",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "tokenBalances",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        }
      ],
      "name": "verifyBalance",
      "outputs": [],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "vestedBalances",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "vestings",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "actionId",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "totalVested",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "totalClaimed",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "startTime",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "cliff",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "duration",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_processID",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "_depositID",
          "type": "uint256"
        }
      ],
      "name": "withdraw",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x628d0ae51011ce450de87b92abda73d253be2fc76032588a33594eef3d81ed71",
  "receipt": {
    "to": null,
    "from": "0xc039897eE5A0d14A3d1F212922FaF7e159Ab619F",
    "contractAddress": "0xF43F28bC7D7ac20CB0D1EB9b36a41ad2E92798fD",
    "transactionIndex": 4,
    "gasUsed": "2643623",
    "logsBloom": "0x
    "blockHash": "0xee16bbdff93e5b05121cadb988cb7b40c4ae87ce6883a7dfffbe0431d31df7d6",
    "transactionHash": "0x628d0ae51011ce450de87b92abda73d253be2fc76032588a33594eef3d81ed71",
    "logs": [],
    "blockNumber": 10312752,
    "cumulativeGasUsed": "3137553",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "solcInputHash": "cfb4d5c1adc8b1c777f04cbfe46f0a57",
  "metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"processID\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"depositID\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"Deposited\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"actionId\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"claimed\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"dao\",\"type\":\"address\"}],\"name\":\"VestingClaimed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"processID\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"vestingStart\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"vestingCliff\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"vestingDuration\",\"type\":\"uint256\"}],\"name\":\"VestingStarted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"processID\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"depositID\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Withdrawn\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"availableModuleBalances\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"baseContract\",\"outputs\":[{\"internalType\":\"contract IBaseContract\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_id\",\"type\":\"bytes32\"}],\"name\":\"claimDealVestings\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claimVestings\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"dao\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_processID\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"deposits\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"used\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"time\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_processID\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"getAvailableProcessBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"getBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_processID\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"_depositID\",\"type\":\"uint256\"}],\"name\":\"getDeposit\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_processID\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"_fromDepositID\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_toDepositID\",\"type\":\"uint256\"}],\"name\":\"getDepositRange\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"senders\",\"type\":\"address[]\"},{\"internalType\":\"address[]\",\"name\":\"tokens\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"usedAmounts\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"times\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_module\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"getProcessID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_processID\",\"type\":\"bytes32\"}],\"name\":\"getTotalDepositCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"getVestedBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_processID\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"getWithdrawableAmountOfUser\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_dao\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newBaseContract\",\"type\":\"address\"}],\"name\":\"migrateBaseContract\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_processID\",\"type\":\"bytes32\"},{\"internalType\":\"address[]\",\"name\":\"_tokens\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"_amounts\",\"type\":\"uint256[]\"}],\"name\":\"multipleDeposits\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_processID\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"registerDeposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_processID\",\"type\":\"bytes32\"},{\"internalType\":\"address[]\",\"name\":\"_tokens\",\"type\":\"address[]\"}],\"name\":\"registerDeposits\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_processID\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"sendToModule\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_actionId\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_vestingCliff\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_vestingDuration\",\"type\":\"uint256\"}],\"name\":\"startVesting\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"tokenBalances\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"verifyBalance\",\"outputs\":[],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"vestedBalances\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"vestings\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"actionId\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"totalVested\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalClaimed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"startTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"cliff\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"duration\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_processID\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"_depositID\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/DepositContract.sol\":\"DepositContract\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address recipient, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address sender,\\n        address recipient,\\n        uint256 amount\\n    ) external returns (bool);\\n\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n}\\n\",\"keccak256\":\"0x61437cb513a887a1bbad006e7b1c8b414478427d33de47c5600af3c748f108da\",\"license\":\"MIT\"},\"contracts/DepositContract.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0-or-later\\npragma solidity ^0.8.9;\\n\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\nimport \\\"./interfaces/IBaseContract.sol\\\";\\nimport \\\"./interfaces/IWETH.sol\\\";\\n\\ncontract DepositContract {\\n    address public dao;\\n    IBaseContract public baseContract;\\n\\n    mapping(address => uint256) public tokenBalances;\\n    mapping(address => mapping(bytes32 => uint256))\\n        public availableModuleBalances;\\n    mapping(address => uint256) public vestedBalances;\\n\\n    // Contains the module descriptor and the ID of the swap/action\\n    // so we can identify deposits for each individual interaction\\n    // e.g. keccak256(abi.encode(\\\"TOKEN_SWAP_MODULE\\\", 42));\\n    // for a deposit for a token swap with the id 42\\n    mapping(bytes32 => Deposit[]) public deposits;\\n\\n    Vesting[] public vestings;\\n\\n    struct Deposit {\\n        address sender;\\n        address token;\\n        uint256 amount;\\n        uint256 used;\\n        uint256 time;\\n    }\\n\\n    struct Vesting {\\n        bytes32 actionId;\\n        address token;\\n        uint256 totalVested;\\n        uint256 totalClaimed;\\n        uint256 startTime;\\n        uint256 cliff;\\n        uint256 duration;\\n    }\\n\\n    event Deposited(\\n        bytes32 processID,\\n        uint256 depositID,\\n        address token,\\n        uint256 amount,\\n        address sender\\n    );\\n\\n    event Withdrawn(\\n        bytes32 processID,\\n        uint256 depositID,\\n        address to,\\n        address token,\\n        uint256 amount\\n    );\\n\\n    event VestingStarted(\\n        bytes32 processID,\\n        address token,\\n        uint256 amount,\\n        uint256 vestingStart,\\n        uint256 vestingCliff,\\n        uint256 vestingDuration\\n    );\\n\\n    event VestingClaimed(\\n        bytes32 actionId,\\n        address token,\\n        uint256 claimed,\\n        address dao\\n    );\\n\\n    function initialize(address _dao) external {\\n        require(dao == address(0), \\\"D2D-DEPOSIT-ALREADY-INITIALIZED\\\");\\n        require(_dao != address(0), \\\"D2D-DEPOSIT-INVALID-DAO-ADDRESS\\\");\\n        dao = _dao;\\n        baseContract = IBaseContract(msg.sender);\\n    }\\n\\n    function migrateBaseContract(address _newBaseContract)\\n        external\\n        onlyBaseContract\\n    {\\n        baseContract = IBaseContract(_newBaseContract);\\n    }\\n\\n    function deposit(\\n        bytes32 _processID,\\n        address _token,\\n        uint256 _amount\\n    ) public payable {\\n        require(\\n            (_token != address(0) && _amount > 0) ||\\n                (_token == address(0) && msg.value > 0),\\n            \\\"D2D-DEPOSIT-INVALID-TOKEN-AMOUNT\\\"\\n        );\\n        if (_token != address(0)) {\\n            _transferTokenFrom(_token, msg.sender, address(this), _amount);\\n        } else {\\n            _amount = msg.value;\\n            _token = baseContract.weth();\\n            IWETH(_token).deposit{value: _amount}();\\n        }\\n\\n        tokenBalances[_token] += _amount;\\n        availableModuleBalances[_token][_processID] += _amount;\\n        verifyBalance(_token);\\n        // solhint-disable-next-line not-rely-on-time\\n        deposits[_processID].push(\\n            Deposit(msg.sender, _token, _amount, 0, block.timestamp)\\n        );\\n\\n        emit Deposited(\\n            _processID,\\n            deposits[_processID].length,\\n            _token,\\n            _amount,\\n            msg.sender\\n        );\\n    }\\n\\n    function multipleDeposits(\\n        bytes32 _processID,\\n        address[] calldata _tokens,\\n        uint256[] calldata _amounts\\n    ) external payable {\\n        // solhint-disable-next-line reason-string\\n        require(\\n            _tokens.length == _amounts.length,\\n            \\\"D2D-DEPOSIT-ARRAY-LENGTH-MISMATCH\\\"\\n        );\\n        for (uint256 i = 0; i < _tokens.length; i++) {\\n            deposit(_processID, _tokens[i], _amounts[i]);\\n        }\\n    }\\n\\n    function registerDeposit(bytes32 _processID, address _token) public {\\n        uint256 currentBalance = 0;\\n        if (_token != address(0)) {\\n            currentBalance = IERC20(_token).balanceOf(address(this));\\n        } else {\\n            _token = baseContract.weth();\\n            currentBalance = address(this).balance;\\n        }\\n        if (currentBalance > tokenBalances[_token]) {\\n            uint256 amount = currentBalance - tokenBalances[_token];\\n            tokenBalances[_token] = currentBalance;\\n            if (_token == address(0)) {\\n                IWETH(_token).deposit{value: amount}();\\n            }\\n            availableModuleBalances[_token][_processID] += amount;\\n            deposits[_processID].push(\\n                Deposit(dao, _token, amount, 0, block.timestamp)\\n            );\\n            emit Deposited(\\n                _processID,\\n                deposits[_processID].length,\\n                _token,\\n                amount,\\n                dao\\n            );\\n        }\\n        verifyBalance(_token);\\n    }\\n\\n    function registerDeposits(bytes32 _processID, address[] calldata _tokens)\\n        external\\n    {\\n        for (uint256 i = 0; i < _tokens.length; i++) {\\n            registerDeposit(_processID, _tokens[i]);\\n        }\\n    }\\n\\n    function withdraw(bytes32 _processID, uint256 _depositID)\\n        external\\n        returns (\\n            address,\\n            address,\\n            uint256\\n        )\\n    {\\n        require(\\n            deposits[_processID].length >= _depositID,\\n            \\\"D2D-DEPOSIT-INVALID-DEPOSIT-ID\\\"\\n        );\\n        Deposit storage d = deposits[_processID][_depositID];\\n        // Either the caller did the deposit or it's a dao deposit\\n        // and the caller is the dao or a representative\\n        require(d.sender == msg.sender, \\\"D2D-WITHDRAW-NOT-AUTHORIZED\\\");\\n\\n        uint256 freeAmount = d.amount - d.used;\\n        // Deposit can't be used by a module or withdrawn already\\n        require(freeAmount > 0, \\\"D2D-DEPOSIT-NOT-WITHDRAWABLE\\\");\\n        d.used = d.amount;\\n        availableModuleBalances[d.token][_processID] -= freeAmount;\\n        tokenBalances[d.token] -= freeAmount;\\n\\n        // If it's a token\\n        if (d.token != baseContract.weth()) {\\n            _transferToken(d.token, d.sender, freeAmount);\\n            // Else if it's Ether\\n        } else {\\n            IWETH(baseContract.weth()).withdraw(freeAmount);\\n            require(\\n                address(this).balance >= freeAmount,\\n                \\\"D2D-DEPOSIT-INVALID-AMOUNT\\\"\\n            );\\n            (bool sent, ) = d.sender.call{value: freeAmount}(\\\"\\\");\\n            require(sent, \\\"D2D-DEPOSIT-FAILED-TO-SEND-ETHER\\\");\\n        }\\n\\n        emit Withdrawn(_processID, _depositID, d.sender, d.token, freeAmount);\\n        return (d.sender, d.token, freeAmount);\\n    }\\n\\n    function sendToModule(\\n        bytes32 _processID,\\n        address _token,\\n        uint256 _amount\\n    ) external onlyModule returns (bool) {\\n        uint256 amountLeft = _amount;\\n        for (uint256 i = 0; i < deposits[_processID].length; i++) {\\n            if (deposits[_processID][i].token == _token) {\\n                uint256 freeAmount = deposits[_processID][i].amount -\\n                    deposits[_processID][i].used;\\n                if (freeAmount > amountLeft) {\\n                    freeAmount = amountLeft;\\n                }\\n                amountLeft -= freeAmount;\\n                deposits[_processID][i].used += freeAmount;\\n                if (amountLeft == 0) {\\n                    if (_token == address(0)) {\\n                        IWETH(baseContract.weth()).withdraw(_amount);\\n                        (bool sent, ) = msg.sender.call{value: _amount}(\\\"\\\");\\n                        require(sent, \\\"D2D-DEPOSIT-FAILED-TO-SEND-ETHER\\\");\\n                    } else {\\n                        _transferToken(_token, msg.sender, _amount);\\n                        tokenBalances[_token] -= _amount;\\n                    }\\n                    availableModuleBalances[_token][_processID] -= _amount;\\n                    return true;\\n                }\\n            }\\n        }\\n        return false;\\n    }\\n\\n    function startVesting(\\n        bytes32 _actionId,\\n        address _token,\\n        uint256 _amount,\\n        uint256 _vestingCliff,\\n        uint256 _vestingDuration\\n    ) external onlyModule {\\n        // solhint-disable-next-line reason-string\\n        require(\\n            _token != address(0),\\n            \\\"D2D-DEPOSIT-VESTING-INVALID-TOKEN-ADDRESS\\\"\\n        );\\n        // solhint-disable-next-line reason-string\\n        require(_amount > 0, \\\"D2D-DEPOSIT-VESTING-INVALID-AMOUNT\\\");\\n        // solhint-disable-next-line reason-string\\n        require(\\n            _vestingCliff < _vestingDuration,\\n            \\\"D2D-DEPOSIT-VESTINGCLIFF-BIGGER-THAN-DURATION\\\"\\n        );\\n\\n        _transferTokenFrom(_token, msg.sender, address(this), _amount);\\n        vestedBalances[_token] += _amount;\\n\\n        vestings.push(\\n            Vesting(\\n                _actionId,\\n                _token,\\n                _amount,\\n                0,\\n                block.timestamp,\\n                _vestingCliff,\\n                _vestingDuration\\n            )\\n        );\\n        emit VestingStarted(\\n            _actionId,\\n            _token,\\n            _amount,\\n            block.timestamp,\\n            _vestingCliff,\\n            _vestingDuration\\n        );\\n    }\\n\\n    function claimVestings() external returns (uint256 amount) {\\n        for (uint256 i = 0; i < vestings.length; i++) {\\n            amount += sentReleasableClaim(vestings[i]);\\n        }\\n    }\\n\\n    function sentReleasableClaim(Vesting memory vesting)\\n        private\\n        returns (uint256 amount)\\n    {\\n        if (vesting.totalClaimed < vesting.totalVested) {\\n            // Check cliff was reached\\n            uint256 elapsedSeconds = block.timestamp - vesting.startTime;\\n\\n            if (elapsedSeconds < vesting.cliff) {\\n                return 0;\\n            }\\n            if (elapsedSeconds >= vesting.duration) {\\n                amount = vesting.totalVested - vesting.totalClaimed;\\n                vesting.totalClaimed = vesting.totalVested;\\n            } else {\\n                amount =\\n                    (vesting.totalVested * elapsedSeconds) /\\n                    vesting.duration;\\n                vesting.totalClaimed += amount;\\n            }\\n            // solhint-disable-next-line reason-string\\n            require(\\n                vesting.totalClaimed <= vesting.totalVested,\\n                \\\"D2D-VESTING-CLAIM-AMOUNT-MISMATCH\\\"\\n            );\\n            vestedBalances[vesting.token] -= amount;\\n            if (vesting.token != baseContract.weth()) {\\n                _transferToken(vesting.token, dao, amount);\\n            } else {\\n                IWETH(baseContract.weth()).withdraw(amount);\\n                (bool sent, ) = dao.call{value: amount}(\\\"\\\");\\n                require(sent, \\\"D2D-DEPOSIT-FAILED-TO-SEND-ETHER\\\");\\n            }\\n            emit VestingClaimed(vesting.actionId, vesting.token, amount, dao);\\n        }\\n    }\\n\\n    function claimDealVestings(bytes32 _id) external returns (uint256 amount) {\\n        for (uint256 i = 0; i < vestings.length; i++) {\\n            if (vestings[i].actionId == _id) {\\n                amount = sentReleasableClaim(vestings[i]);\\n            }\\n        }\\n    }\\n\\n    function verifyBalance(address _token) public view {\\n        if (_token == address(0)) {\\n            _token = baseContract.weth();\\n        }\\n\\n        uint256 balance = IERC20(_token).balanceOf(address(this));\\n        require(\\n            balance >= tokenBalances[_token] + vestedBalances[_token],\\n            \\\"D2D-DEPOSIT-BALANCE-INVALID\\\"\\n        );\\n    }\\n\\n    function getDeposit(bytes32 _processID, uint256 _depositID)\\n        public\\n        view\\n        returns (\\n            address,\\n            address,\\n            uint256,\\n            uint256,\\n            uint256\\n        )\\n    {\\n        Deposit memory d = deposits[_processID][_depositID];\\n        return (\\n            d.sender,\\n            d.token == baseContract.weth() ? address(0) : d.token,\\n            d.amount,\\n            d.used,\\n            d.time\\n        );\\n    }\\n\\n    function getDepositRange(\\n        bytes32 _processID,\\n        uint256 _fromDepositID,\\n        uint256 _toDepositID\\n    )\\n        external\\n        view\\n        returns (\\n            address[] memory senders,\\n            address[] memory tokens,\\n            uint256[] memory amounts,\\n            uint256[] memory usedAmounts,\\n            uint256[] memory times\\n        )\\n    {\\n        uint256 range = 2 + _toDepositID - _fromDepositID; // inclusive range\\n        senders = new address[](range);\\n        tokens = new address[](range);\\n        amounts = new uint256[](range);\\n        usedAmounts = new uint256[](range);\\n        times = new uint256[](range);\\n        for (uint256 i = _toDepositID; i <= _fromDepositID; i++) {\\n            (\\n                senders[i],\\n                tokens[i],\\n                amounts[i],\\n                usedAmounts[i],\\n                times[i]\\n            ) = getDeposit(_processID, i);\\n        }\\n        return (senders, tokens, amounts, usedAmounts, times);\\n    }\\n\\n    function getAvailableProcessBalance(bytes32 _processID, address _token)\\n        external\\n        view\\n        returns (uint256)\\n    {\\n        return availableModuleBalances[_token][_processID];\\n    }\\n\\n    function getTotalDepositCount(bytes32 _processID)\\n        external\\n        view\\n        returns (uint256)\\n    {\\n        return deposits[_processID].length;\\n    }\\n\\n    function getWithdrawableAmountOfUser(\\n        bytes32 _processID,\\n        address _user,\\n        address _token\\n    ) external view returns (uint256) {\\n        uint256 freeAmount = 0;\\n        for (uint256 i = 0; i < deposits[_processID].length; i++) {\\n            if (\\n                deposits[_processID][i].sender == _user &&\\n                deposits[_processID][i].token == _token\\n            ) {\\n                freeAmount += (deposits[_processID][i].amount -\\n                    deposits[_processID][i].used);\\n            }\\n        }\\n        return freeAmount;\\n    }\\n\\n    function getBalance(address _token) external view returns (uint256) {\\n        if (_token == address(0)) {\\n            return address(this).balance;\\n        }\\n        return tokenBalances[_token];\\n    }\\n\\n    function getVestedBalance(address _token) external view returns (uint256) {\\n        return vestedBalances[_token];\\n    }\\n\\n    function getProcessID(string memory _module, uint256 _id)\\n        external\\n        pure\\n        returns (bytes32)\\n    {\\n        return keccak256(abi.encode(_module, _id));\\n    }\\n\\n    function _transferToken(\\n        address _token,\\n        address _to,\\n        uint256 _amount\\n    ) internal {\\n        require(\\n            IERC20(_token).transfer(_to, _amount),\\n            \\\"D2D-TOKEN-TRANSFER-FAILED\\\"\\n        );\\n    }\\n\\n    function _transferTokenFrom(\\n        address _token,\\n        address _from,\\n        address _to,\\n        uint256 _amount\\n    ) internal {\\n        require(\\n            IERC20(_token).transferFrom(_from, _to, _amount),\\n            \\\"D2D-TOKEN-TRANSFER-FAILED\\\"\\n        );\\n    }\\n\\n    modifier onlyBaseContract() {\\n        // solhint-disable-next-line reason-string\\n        require(\\n            msg.sender == address(baseContract),\\n            \\\"D2D-DEPOSIT-ONLY-BASE-CONTRACT-CAN-ACCESS\\\"\\n        );\\n        _;\\n    }\\n\\n    modifier onlyModule() {\\n        require(baseContract.addressIsModule(msg.sender), \\\"D2D-NOT-MODULE\\\");\\n        _;\\n    }\\n}\\n\",\"keccak256\":\"0x07c85bcb8973481fc33eca8b453cb62fa0ab91b831e1c6c7cc660aa4821b3f35\",\"license\":\"GPL-3.0-or-later\"},\"contracts/interfaces/IBaseContract.sol\":{\"content\":\"// SPDX-License-Identifier: Unlicense\\npragma solidity ^0.8.9;\\n\\ninterface IBaseContract {\\n    function createDepositContract(address _dao) external;\\n\\n    function hasDepositContract(address _dao) external view returns (bool);\\n\\n    function getDepositContract(address _dao) external view returns (address);\\n\\n    function owner() external view returns (address);\\n\\n    function weth() external view returns (address);\\n\\n    function addressIsModule(address _address) external view returns (bool);\\n}\\n\",\"keccak256\":\"0xfa23fb1c31aaec0a91012e9c568c59603bef7f7733b410b38bb58d84647174be\",\"license\":\"Unlicense\"},\"contracts/interfaces/IWETH.sol\":{\"content\":\"// SPDX-License-Identifier: Unlicense\\npragma solidity >=0.5.0;\\n\\ninterface IWETH {\\n    function deposit() external payable;\\n\\n    function transfer(address to, uint256 value) external returns (bool);\\n\\n    function withdraw(uint256) external;\\n}\\n\",\"keccak256\":\"0x5c3235d86b4ad50863096bdb860ebee226c6fedca70712e95c5cd6005096a5a1\",\"license\":\"Unlicense\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50612edd806100206000396000f3fe60806040526004361061019c5760003560e01c8063836d21b5116100ec578063cd862c3c1161008a578063e1b32e6e11610064578063e1b32e6e146105a5578063eba3b7ae146105d5578063f62d1d6b146105f5578063f8b2cb4f1461061557600080fd5b8063cd862c3c14610552578063d954863c14610572578063deb2f87d1461058557600080fd5b8063a00ddad1116100c6578063a00ddad1146104ad578063a93690aa146104cd578063c4d66de814610505578063cb3fdb611461052557600080fd5b8063836d21b5146104255780638626a6f61461043a5780638a39f9601461045a57600080fd5b80634162169f11610159578063616c399011610133578063616c399014610345578063705e0061146103655780637f58b9d314610392578063821bee73146103c857600080fd5b80634162169f146102c0578063523fba7f146102f85780635b32619c1461032557600080fd5b8063040cf020146101a157806319d50a65146101ec5780631beaae871461021d578063205bdd6f1461023257806332296e0b146102605780633d2c0c07146102a0575b600080fd5b3480156101ad57600080fd5b506101c16101bc36600461288e565b610635565b604080516001600160a01b039485168152939092166020840152908201526060015b60405180910390f35b3480156101f857600080fd5b5061020c6102073660046128b0565b610acb565b6040516101e3959493929190612950565b61023061022b366004612a09565b610d13565b005b34801561023e57600080fd5b5061025261024d366004612a9b565b610dda565b6040519081526020016101e3565b34801561026c57600080fd5b5061025261027b366004612add565b6001600160a01b03166000908152600360209081526040808320938352929052205490565b3480156102ac57600080fd5b506102526102bb366004612b23565b610f2f565b3480156102cc57600080fd5b506000546102e0906001600160a01b031681565b6040516001600160a01b0390911681526020016101e3565b34801561030457600080fd5b50610252610313366004612bd8565b60026020526000908152604090205481565b34801561033157600080fd5b506001546102e0906001600160a01b031681565b34801561035157600080fd5b50610230610360366004612bd8565b610f62565b34801561037157600080fd5b50610252610380366004612bf5565b60009081526005602052604090205490565b34801561039e57600080fd5b506102526103ad366004612bd8565b6001600160a01b031660009081526004602052604090205490565b3480156103d457600080fd5b506103e86103e3366004612bf5565b610ff0565b604080519788526001600160a01b039096166020880152948601939093526060850191909152608084015260a083015260c082015260e0016101e3565b34801561043157600080fd5b50610252611049565b34801561044657600080fd5b50610252610455366004612bf5565b6110fc565b34801561046657600080fd5b5061047a61047536600461288e565b611167565b604080516001600160a01b039687168152959094166020860152928401919091526060830152608082015260a0016101e3565b3480156104b957600080fd5b506102306104c8366004612bd8565b6111c2565b3480156104d957600080fd5b506102526104e8366004612c0e565b600360209081526000928352604080842090915290825290205481565b34801561051157600080fd5b50610230610520366004612bd8565b611339565b34801561053157600080fd5b50610252610540366004612bd8565b60046020526000908152604090205481565b34801561055e57600080fd5b5061023061056d366004612c3a565b611413565b610230610580366004612c86565b611461565b34801561059157600080fd5b5061047a6105a036600461288e565b611744565b3480156105b157600080fd5b506105c56105c0366004612c86565b611872565b60405190151581526020016101e3565b3480156105e157600080fd5b506102306105f0366004612add565b611c4d565b34801561060157600080fd5b50610230610610366004612cbe565b611f5b565b34801561062157600080fd5b50610252610630366004612bd8565b61234f565b6000828152600560205260408120548190819084111561069c5760405162461bcd60e51b815260206004820152601e60248201527f4432442d4445504f5349542d494e56414c49442d4445504f5349542d4944000060448201526064015b60405180910390fd5b60008581526005602052604081208054869081106106bc576106bc612d06565b6000918252602090912060059091020180549091506001600160a01b031633146107285760405162461bcd60e51b815260206004820152601b60248201527f4432442d57495448445241572d4e4f542d415554484f52495a454400000000006044820152606401610693565b60008160030154826002015461073e9190612d32565b9050600081116107905760405162461bcd60e51b815260206004820152601c60248201527f4432442d4445504f5349542d4e4f542d574954484452415741424c45000000006044820152606401610693565b600282015460038084019190915560018301546001600160a01b03166000908152602091825260408082208a835290925290812080548392906107d4908490612d32565b909155505060018201546001600160a01b031660009081526002602052604081208054839290610805908490612d32565b909155505060015460408051633fc8cef360e01b815290516001600160a01b0390921691633fc8cef3916004808201926020929091908290030181865afa158015610854573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108789190612d49565b60018301546001600160a01b039081169116146108b257600182015482546108ad916001600160a01b03908116911683612382565b610a4c565b600160009054906101000a90046001600160a01b03166001600160a01b0316633fc8cef36040518163ffffffff1660e01b8152600401602060405180830381865afa158015610905573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109299190612d49565b6001600160a01b0316632e1a7d4d826040518263ffffffff1660e01b815260040161095691815260200190565b600060405180830381600087803b15801561097057600080fd5b505af1158015610984573d6000803e3d6000fd5b50505050804710156109d85760405162461bcd60e51b815260206004820152601a60248201527f4432442d4445504f5349542d494e56414c49442d414d4f554e540000000000006044820152606401610693565b81546040516000916001600160a01b03169083908381818185875af1925050503d8060008114610a24576040519150601f19603f3d011682016040523d82523d6000602084013e610a29565b606091505b5050905080610a4a5760405162461bcd60e51b815260040161069390612d66565b505b81546001830154604080518a8152602081018a90526001600160a01b039384168183015292909116606083015260808201839052517f0495fa8ede9c64daa55c15439a9738cd0d911677b08efd59e801596eef644dba9181900360a00190a181546001909201546001600160a01b039283169892169650945092505050565b606080808080600087610adf886002612d9b565b610ae99190612d32565b90508067ffffffffffffffff811115610b0457610b04612b0d565b604051908082528060200260200182016040528015610b2d578160200160208202803683370190505b5095508067ffffffffffffffff811115610b4957610b49612b0d565b604051908082528060200260200182016040528015610b72578160200160208202803683370190505b5094508067ffffffffffffffff811115610b8e57610b8e612b0d565b604051908082528060200260200182016040528015610bb7578160200160208202803683370190505b5093508067ffffffffffffffff811115610bd357610bd3612b0d565b604051908082528060200260200182016040528015610bfc578160200160208202803683370190505b5092508067ffffffffffffffff811115610c1857610c18612b0d565b604051908082528060200260200182016040528015610c41578160200160208202803683370190505b509150865b888111610d0657610c578a82611744565b8b8681518110610c6957610c69612d06565b602002602001018b8781518110610c8257610c82612d06565b602002602001018b8881518110610c9b57610c9b612d06565b602002602001018b8981518110610cb457610cb4612d06565b602002602001018b8a81518110610ccd57610ccd612d06565b602090810291909101019490945293909252929091526001600160a01b0392831690529116905280610cfe81612db3565b915050610c46565b5050939792965093509350565b828114610d6c5760405162461bcd60e51b815260206004820152602160248201527f4432442d4445504f5349542d41525241592d4c454e4754482d4d49534d4154436044820152600960fb1b6064820152608401610693565b60005b83811015610dd257610dc086868684818110610d8d57610d8d612d06565b9050602002016020810190610da29190612bd8565b858585818110610db457610db4612d06565b90506020020135611461565b80610dca81612db3565b915050610d6f565b505050505050565b600080805b600086815260056020526040902054811015610f2457600086815260056020526040902080546001600160a01b038716919083908110610e2157610e21612d06565b60009182526020909120600590910201546001600160a01b0316148015610e8e5750600086815260056020526040902080546001600160a01b038616919083908110610e6f57610e6f612d06565b60009182526020909120600160059092020101546001600160a01b0316145b15610f12576000868152600560205260409020805482908110610eb357610eb3612d06565b906000526020600020906005020160030154600560008881526020019081526020016000208281548110610ee957610ee9612d06565b906000526020600020906005020160020154610f059190612d32565b610f0f9083612d9b565b91505b80610f1c81612db3565b915050610ddf565b5090505b9392505050565b60008282604051602001610f44929190612dce565b60405160208183030381529060405280519060200120905092915050565b6001546001600160a01b03163314610fce5760405162461bcd60e51b815260206004820152602960248201527f4432442d4445504f5349542d4f4e4c592d424153452d434f4e54524143542d43604482015268414e2d41434345535360b81b6064820152608401610693565b600180546001600160a01b0319166001600160a01b0392909216919091179055565b6006818154811061100057600080fd5b600091825260209091206007909102018054600182015460028301546003840154600485015460058601546006909601549496506001600160a01b039093169491939092919087565b6000805b6006548110156110f8576110da6006828154811061106d5761106d612d06565b60009182526020918290206040805160e08101825260079093029091018054835260018101546001600160a01b0316938301939093526002830154908201526003820154606082015260048201546080820152600582015460a082015260069091015460c082015261243d565b6110e49083612d9b565b9150806110f081612db3565b91505061104d565b5090565b6000805b60065481101561116157826006828154811061111e5761111e612d06565b906000526020600020906007020160000154141561114f5761114c6006828154811061106d5761106d612d06565b91505b8061115981612db3565b915050611100565b50919050565b6005602052816000526040600020818154811061118357600080fd5b6000918252602090912060059091020180546001820154600283015460038401546004909401546001600160a01b039384169650929091169350919085565b6001600160a01b03811661124a57600160009054906101000a90046001600160a01b03166001600160a01b0316633fc8cef36040518163ffffffff1660e01b8152600401602060405180830381865afa158015611223573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112479190612d49565b90505b6040516370a0823160e01b81523060048201526000906001600160a01b038316906370a0823190602401602060405180830381865afa158015611291573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112b59190612e2b565b6001600160a01b0383166000908152600460209081526040808320546002909252909120549192506112e691612d9b565b8110156113355760405162461bcd60e51b815260206004820152601b60248201527f4432442d4445504f5349542d42414c414e43452d494e56414c494400000000006044820152606401610693565b5050565b6000546001600160a01b0316156113925760405162461bcd60e51b815260206004820152601f60248201527f4432442d4445504f5349542d414c52454144592d494e495449414c495a4544006044820152606401610693565b6001600160a01b0381166113e85760405162461bcd60e51b815260206004820152601f60248201527f4432442d4445504f5349542d494e56414c49442d44414f2d41444452455353006044820152606401610693565b600080546001600160a01b039092166001600160a01b03199283161790556001805490911633179055565b60005b8181101561145b576114498484848481811061143457611434612d06565b90506020020160208101906105f09190612bd8565b8061145381612db3565b915050611416565b50505050565b6001600160a01b038216158015906114795750600081115b8061149657506001600160a01b0382161580156114965750600034115b6114e25760405162461bcd60e51b815260206004820181905260248201527f4432442d4445504f5349542d494e56414c49442d544f4b454e2d414d4f554e546044820152606401610693565b6001600160a01b03821615611502576114fd823330846127cb565b6115c7565b5060015460408051633fc8cef360e01b8152905134926001600160a01b031691633fc8cef39160048083019260209291908290030181865afa15801561154c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115709190612d49565b9150816001600160a01b031663d0e30db0826040518263ffffffff1660e01b81526004016000604051808303818588803b1580156115ad57600080fd5b505af11580156115c1573d6000803e3d6000fd5b50505050505b6001600160a01b038216600090815260026020526040812080548392906115ef908490612d9b565b90915550506001600160a01b038216600090815260036020908152604080832086845290915281208054839290611627908490612d9b565b909155506116369050826111c2565b6000838152600560208181526040808420815160a081018352338082526001600160a01b038981168387019081528386018a8152606085018a81524260808701908152875460018181018a55898e528b8e209851918d0290980180549187166001600160a01b031992831617815594519785018054989096169716969096179093555160028201559051600382015591516004909201919091559488905292909152905490517f1d95434bb9e08b232f54a62aa6512b40e5aaf83565f680797563764d6e9c030d926117379287929091879187919094855260208501939093526001600160a01b039182166040850152606084015216608082015260a00190565b60405180910390a1505050565b60008060008060008060056000898152602001908152602001600020878154811061177157611771612d06565b60009182526020918290206040805160a081018252600590930290910180546001600160a01b03908116808552600180840154831686880152600284015486860152600384015460608701526004938401546080870152548451633fc8cef360e01b815294519597509095911693633fc8cef39380840193908290030181865afa158015611803573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118279190612d49565b6001600160a01b031682602001516001600160a01b03161461184d578160200151611850565b60005b60408301516060840151608090940151929b919a509850919650945092505050565b600154604051631b5fc51160e01b81523360048201526000916001600160a01b031690631b5fc51190602401602060405180830381865afa1580156118bb573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118df9190612e44565b61191c5760405162461bcd60e51b815260206004820152600e60248201526d4432442d4e4f542d4d4f44554c4560901b6044820152606401610693565b8160005b600086815260056020526040902054811015611c4157600086815260056020526040902080546001600160a01b03871691908390811061196257611962612d06565b60009182526020909120600160059092020101546001600160a01b03161415611c2f5760008681526005602052604081208054839081106119a5576119a5612d06565b9060005260206000209060050201600301546005600089815260200190815260200160002083815481106119db576119db612d06565b9060005260206000209060050201600201546119f79190612d32565b905082811115611a045750815b611a0e8184612d32565b60008881526005602052604090208054919450829184908110611a3357611a33612d06565b90600052602060002090600502016003016000828254611a539190612d9b565b909155505082611c2d576001600160a01b038616611baf57600160009054906101000a90046001600160a01b03166001600160a01b0316633fc8cef36040518163ffffffff1660e01b8152600401602060405180830381865afa158015611abe573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611ae29190612d49565b6001600160a01b0316632e1a7d4d866040518263ffffffff1660e01b8152600401611b0f91815260200190565b600060405180830381600087803b158015611b2957600080fd5b505af1158015611b3d573d6000803e3d6000fd5b50506040516000925033915087908381818185875af1925050503d8060008114611b83576040519150601f19603f3d011682016040523d82523d6000602084013e611b88565b606091505b5050905080611ba95760405162461bcd60e51b815260040161069390612d66565b50611be8565b611bba863387612382565b6001600160a01b03861660009081526002602052604081208054879290611be2908490612d32565b90915550505b6001600160a01b03861660009081526003602090815260408083208a845290915281208054879290611c1b908490612d32565b9091555060019450610f289350505050565b505b80611c3981612db3565b915050611920565b50600095945050505050565b60006001600160a01b03821615611ccd576040516370a0823160e01b81523060048201526001600160a01b038316906370a0823190602401602060405180830381865afa158015611ca2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611cc69190612e2b565b9050611d4a565b600160009054906101000a90046001600160a01b03166001600160a01b0316633fc8cef36040518163ffffffff1660e01b8152600401602060405180830381865afa158015611d20573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611d449190612d49565b91504790505b6001600160a01b038216600090815260026020526040902054811115611f4d576001600160a01b038216600090815260026020526040812054611d8d9083612d32565b6001600160a01b0384166000818152600260205260409020849055909150611e0457826001600160a01b031663d0e30db0826040518263ffffffff1660e01b81526004016000604051808303818588803b158015611dea57600080fd5b505af1158015611dfe573d6000803e3d6000fd5b50505050505b6001600160a01b038316600090815260036020908152604080832087845290915281208054839290611e37908490612d9b565b90915550506000848152600560208181526040808420815160a08101835285546001600160a01b039081168252898116828601908152828501898152606084018981524260808601908152865460018181018955888d528a8d209751918c0290970180549187166001600160a01b0319928316178155945196850180549787169790911696909617909555905160028301555160038201559151600490920191909155898652939092529054925490517f1d95434bb9e08b232f54a62aa6512b40e5aaf83565f680797563764d6e9c030d93611f43938993919289928892169094855260208501939093526001600160a01b039182166040850152606084015216608082015260a00190565b60405180910390a1505b611f56826111c2565b505050565b600154604051631b5fc51160e01b81523360048201526001600160a01b0390911690631b5fc51190602401602060405180830381865afa158015611fa3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611fc79190612e44565b6120045760405162461bcd60e51b815260206004820152600e60248201526d4432442d4e4f542d4d4f44554c4560901b6044820152606401610693565b6001600160a01b03841661206c5760405162461bcd60e51b815260206004820152602960248201527f4432442d4445504f5349542d56455354494e472d494e56414c49442d544f4b456044820152684e2d4144445245535360b81b6064820152608401610693565b600083116120c75760405162461bcd60e51b815260206004820152602260248201527f4432442d4445504f5349542d56455354494e472d494e56414c49442d414d4f55604482015261139560f21b6064820152608401610693565b80821061212c5760405162461bcd60e51b815260206004820152602d60248201527f4432442d4445504f5349542d56455354494e47434c4946462d4249474745522d60448201526c2a2420a716a22aa920aa24a7a760991b6064820152608401610693565b612138843330866127cb565b6001600160a01b03841660009081526004602052604081208054859290612160908490612d9b565b90915550506040805160e0810182528681526001600160a01b0380871660208301908152828401878152600060608501818152426080870181815260a088018b815260c089018b8152600680546001810182559652985160079095027ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f81019590955595517ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d4085018054919098166001600160a01b03199091161790965592517ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d41830155517ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d4282015592517ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d4384015590517ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d4483015591517ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d459091015590517fef97a7370a4e7795f507c75b203d7c00650add8c33748093134c783eb79884ed916123409188918891889190889088909586526001600160a01b0394909416602086015260408501929092526060840152608083015260a082015260c00190565b60405180910390a15050505050565b60006001600160a01b038216612366575047919050565b506001600160a01b031660009081526002602052604090205490565b60405163a9059cbb60e01b81526001600160a01b0383811660048301526024820183905284169063a9059cbb906044016020604051808303816000875af11580156123d1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906123f59190612e44565b611f565760405162461bcd60e51b8152602060048201526019602482015278110c910b5513d2d1538b5514905394d191548b519052531151603a1b6044820152606401610693565b60008160400151826060015110156127c65760008260800151426124619190612d32565b90508260a001518110156124785750600092915050565b8260c0015181106124a857826060015183604001516124979190612d32565b6040840151606085015291506124df565b8260c001518184604001516124bd9190612e66565b6124c79190612e85565b915081836060018181516124db9190612d9b565b9052505b8260400151836060015111156125415760405162461bcd60e51b815260206004820152602160248201527f4432442d56455354494e472d434c41494d2d414d4f554e542d4d49534d4154436044820152600960fb1b6064820152608401610693565b6020808401516001600160a01b03166000908152600490915260408120805484929061256e908490612d32565b909155505060015460408051633fc8cef360e01b815290516001600160a01b0390921691633fc8cef3916004808201926020929091908290030181865afa1580156125bd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906125e19190612d49565b6001600160a01b031683602001516001600160a01b03161461261e57602083015160005461261991906001600160a01b031684612382565b612769565b600160009054906101000a90046001600160a01b03166001600160a01b0316633fc8cef36040518163ffffffff1660e01b8152600401602060405180830381865afa158015612671573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906126959190612d49565b6001600160a01b0316632e1a7d4d836040518263ffffffff1660e01b81526004016126c291815260200190565b600060405180830381600087803b1580156126dc57600080fd5b505af11580156126f0573d6000803e3d6000fd5b5050600080546040519193506001600160a01b0316915084908381818185875af1925050503d8060008114612741576040519150601f19603f3d011682016040523d82523d6000602084013e612746565b606091505b50509050806127675760405162461bcd60e51b815260040161069390612d66565b505b8251602080850151600054604080519485526001600160a01b0392831693850193909352838301869052166060830152517fd1f1e5a6af4c0035b91473c4d2fa2ca4d68e610ef6e9f3f173d08958974903499181900360800190a1505b919050565b6040516323b872dd60e01b81526001600160a01b0384811660048301528381166024830152604482018390528516906323b872dd906064016020604051808303816000875af1158015612822573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906128469190612e44565b61145b5760405162461bcd60e51b8152602060048201526019602482015278110c910b5513d2d1538b5514905394d191548b519052531151603a1b6044820152606401610693565b600080604083850312156128a157600080fd5b50508035926020909101359150565b6000806000606084860312156128c557600080fd5b505081359360208301359350604090920135919050565b600081518084526020808501945080840160005b838110156129155781516001600160a01b0316875295820195908201906001016128f0565b509495945050505050565b600081518084526020808501945080840160005b8381101561291557815187529582019590820190600101612934565b60a08152600061296360a08301886128dc565b828103602084015261297581886128dc565b905082810360408401526129898187612920565b9050828103606084015261299d8186612920565b905082810360808401526129b18185612920565b98975050505050505050565b60008083601f8401126129cf57600080fd5b50813567ffffffffffffffff8111156129e757600080fd5b6020830191508360208260051b8501011115612a0257600080fd5b9250929050565b600080600080600060608688031215612a2157600080fd5b85359450602086013567ffffffffffffffff80821115612a4057600080fd5b612a4c89838a016129bd565b90965094506040880135915080821115612a6557600080fd5b50612a72888289016129bd565b969995985093965092949392505050565b6001600160a01b0381168114612a9857600080fd5b50565b600080600060608486031215612ab057600080fd5b833592506020840135612ac281612a83565b91506040840135612ad281612a83565b809150509250925092565b60008060408385031215612af057600080fd5b823591506020830135612b0281612a83565b809150509250929050565b634e487b7160e01b600052604160045260246000fd5b60008060408385031215612b3657600080fd5b823567ffffffffffffffff80821115612b4e57600080fd5b818501915085601f830112612b6257600080fd5b813581811115612b7457612b74612b0d565b604051601f8201601f19908116603f01168101908382118183101715612b9c57612b9c612b0d565b81604052828152886020848701011115612bb557600080fd5b826020860160208301376000602093820184015298969091013596505050505050565b600060208284031215612bea57600080fd5b8135610f2881612a83565b600060208284031215612c0757600080fd5b5035919050565b60008060408385031215612c2157600080fd5b8235612c2c81612a83565b946020939093013593505050565b600080600060408486031215612c4f57600080fd5b83359250602084013567ffffffffffffffff811115612c6d57600080fd5b612c79868287016129bd565b9497909650939450505050565b600080600060608486031215612c9b57600080fd5b833592506020840135612cad81612a83565b929592945050506040919091013590565b600080600080600060a08688031215612cd657600080fd5b853594506020860135612ce881612a83565b94979496505050506040830135926060810135926080909101359150565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b600082821015612d4457612d44612d1c565b500390565b600060208284031215612d5b57600080fd5b8151610f2881612a83565b6020808252818101527f4432442d4445504f5349542d4641494c45442d544f2d53454e442d4554484552604082015260600190565b60008219821115612dae57612dae612d1c565b500190565b6000600019821415612dc757612dc7612d1c565b5060010190565b604081526000835180604084015260005b81811015612dfc5760208187018101516060868401015201612ddf565b81811115612e0e576000606083860101525b50602083019390935250601f91909101601f191601606001919050565b600060208284031215612e3d57600080fd5b5051919050565b600060208284031215612e5657600080fd5b81518015158114610f2857600080fd5b6000816000190483118215151615612e8057612e80612d1c565b500290565b600082612ea257634e487b7160e01b600052601260045260246000fd5b50049056fea2646970667358221220aba500e1c4bd9b424b7315bef78c09dea28ab3a2e117bdfdbb6277c21ea8834a64736f6c634300080a0033",
  "deployedBytecode": "0x60806040526004361061019c5760003560e01c8063836d21b5116100ec578063cd862c3c1161008a578063e1b32e6e11610064578063e1b32e6e146105a5578063eba3b7ae146105d5578063f62d1d6b146105f5578063f8b2cb4f1461061557600080fd5b8063cd862c3c14610552578063d954863c14610572578063deb2f87d1461058557600080fd5b8063a00ddad1116100c6578063a00ddad1146104ad578063a93690aa146104cd578063c4d66de814610505578063cb3fdb611461052557600080fd5b8063836d21b5146104255780638626a6f61461043a5780638a39f9601461045a57600080fd5b80634162169f11610159578063616c399011610133578063616c399014610345578063705e0061146103655780637f58b9d314610392578063821bee73146103c857600080fd5b80634162169f146102c0578063523fba7f146102f85780635b32619c1461032557600080fd5b8063040cf020146101a157806319d50a65146101ec5780631beaae871461021d578063205bdd6f1461023257806332296e0b146102605780633d2c0c07146102a0575b600080fd5b3480156101ad57600080fd5b506101c16101bc36600461288e565b610635565b604080516001600160a01b039485168152939092166020840152908201526060015b60405180910390f35b3480156101f857600080fd5b5061020c6102073660046128b0565b610acb565b6040516101e3959493929190612950565b61023061022b366004612a09565b610d13565b005b34801561023e57600080fd5b5061025261024d366004612a9b565b610dda565b6040519081526020016101e3565b34801561026c57600080fd5b5061025261027b366004612add565b6001600160a01b03166000908152600360209081526040808320938352929052205490565b3480156102ac57600080fd5b506102526102bb366004612b23565b610f2f565b3480156102cc57600080fd5b506000546102e0906001600160a01b031681565b6040516001600160a01b0390911681526020016101e3565b34801561030457600080fd5b50610252610313366004612bd8565b60026020526000908152604090205481565b34801561033157600080fd5b506001546102e0906001600160a01b031681565b34801561035157600080fd5b50610230610360366004612bd8565b610f62565b34801561037157600080fd5b50610252610380366004612bf5565b60009081526005602052604090205490565b34801561039e57600080fd5b506102526103ad366004612bd8565b6001600160a01b031660009081526004602052604090205490565b3480156103d457600080fd5b506103e86103e3366004612bf5565b610ff0565b604080519788526001600160a01b039096166020880152948601939093526060850191909152608084015260a083015260c082015260e0016101e3565b34801561043157600080fd5b50610252611049565b34801561044657600080fd5b50610252610455366004612bf5565b6110fc565b34801561046657600080fd5b5061047a61047536600461288e565b611167565b604080516001600160a01b039687168152959094166020860152928401919091526060830152608082015260a0016101e3565b3480156104b957600080fd5b506102306104c8366004612bd8565b6111c2565b3480156104d957600080fd5b506102526104e8366004612c0e565b600360209081526000928352604080842090915290825290205481565b34801561051157600080fd5b50610230610520366004612bd8565b611339565b34801561053157600080fd5b50610252610540366004612bd8565b60046020526000908152604090205481565b34801561055e57600080fd5b5061023061056d366004612c3a565b611413565b610230610580366004612c86565b611461565b34801561059157600080fd5b5061047a6105a036600461288e565b611744565b3480156105b157600080fd5b506105c56105c0366004612c86565b611872565b60405190151581526020016101e3565b3480156105e157600080fd5b506102306105f0366004612add565b611c4d565b34801561060157600080fd5b50610230610610366004612cbe565b611f5b565b34801561062157600080fd5b50610252610630366004612bd8565b61234f565b6000828152600560205260408120548190819084111561069c5760405162461bcd60e51b815260206004820152601e60248201527f4432442d4445504f5349542d494e56414c49442d4445504f5349542d4944000060448201526064015b60405180910390fd5b60008581526005602052604081208054869081106106bc576106bc612d06565b6000918252602090912060059091020180549091506001600160a01b031633146107285760405162461bcd60e51b815260206004820152601b60248201527f4432442d57495448445241572d4e4f542d415554484f52495a454400000000006044820152606401610693565b60008160030154826002015461073e9190612d32565b9050600081116107905760405162461bcd60e51b815260206004820152601c60248201527f4432442d4445504f5349542d4e4f542d574954484452415741424c45000000006044820152606401610693565b600282015460038084019190915560018301546001600160a01b03166000908152602091825260408082208a835290925290812080548392906107d4908490612d32565b909155505060018201546001600160a01b031660009081526002602052604081208054839290610805908490612d32565b909155505060015460408051633fc8cef360e01b815290516001600160a01b0390921691633fc8cef3916004808201926020929091908290030181865afa158015610854573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108789190612d49565b60018301546001600160a01b039081169116146108b257600182015482546108ad916001600160a01b03908116911683612382565b610a4c565b600160009054906101000a90046001600160a01b03166001600160a01b0316633fc8cef36040518163ffffffff1660e01b8152600401602060405180830381865afa158015610905573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109299190612d49565b6001600160a01b0316632e1a7d4d826040518263ffffffff1660e01b815260040161095691815260200190565b600060405180830381600087803b15801561097057600080fd5b505af1158015610984573d6000803e3d6000fd5b50505050804710156109d85760405162461bcd60e51b815260206004820152601a60248201527f4432442d4445504f5349542d494e56414c49442d414d4f554e540000000000006044820152606401610693565b81546040516000916001600160a01b03169083908381818185875af1925050503d8060008114610a24576040519150601f19603f3d011682016040523d82523d6000602084013e610a29565b606091505b5050905080610a4a5760405162461bcd60e51b815260040161069390612d66565b505b81546001830154604080518a8152602081018a90526001600160a01b039384168183015292909116606083015260808201839052517f0495fa8ede9c64daa55c15439a9738cd0d911677b08efd59e801596eef644dba9181900360a00190a181546001909201546001600160a01b039283169892169650945092505050565b606080808080600087610adf886002612d9b565b610ae99190612d32565b90508067ffffffffffffffff811115610b0457610b04612b0d565b604051908082528060200260200182016040528015610b2d578160200160208202803683370190505b5095508067ffffffffffffffff811115610b4957610b49612b0d565b604051908082528060200260200182016040528015610b72578160200160208202803683370190505b5094508067ffffffffffffffff811115610b8e57610b8e612b0d565b604051908082528060200260200182016040528015610bb7578160200160208202803683370190505b5093508067ffffffffffffffff811115610bd357610bd3612b0d565b604051908082528060200260200182016040528015610bfc578160200160208202803683370190505b5092508067ffffffffffffffff811115610c1857610c18612b0d565b604051908082528060200260200182016040528015610c41578160200160208202803683370190505b509150865b888111610d0657610c578a82611744565b8b8681518110610c6957610c69612d06565b602002602001018b8781518110610c8257610c82612d06565b602002602001018b8881518110610c9b57610c9b612d06565b602002602001018b8981518110610cb457610cb4612d06565b602002602001018b8a81518110610ccd57610ccd612d06565b602090810291909101019490945293909252929091526001600160a01b0392831690529116905280610cfe81612db3565b915050610c46565b5050939792965093509350565b828114610d6c5760405162461bcd60e51b815260206004820152602160248201527f4432442d4445504f5349542d41525241592d4c454e4754482d4d49534d4154436044820152600960fb1b6064820152608401610693565b60005b83811015610dd257610dc086868684818110610d8d57610d8d612d06565b9050602002016020810190610da29190612bd8565b858585818110610db457610db4612d06565b90506020020135611461565b80610dca81612db3565b915050610d6f565b505050505050565b600080805b600086815260056020526040902054811015610f2457600086815260056020526040902080546001600160a01b038716919083908110610e2157610e21612d06565b60009182526020909120600590910201546001600160a01b0316148015610e8e5750600086815260056020526040902080546001600160a01b038616919083908110610e6f57610e6f612d06565b60009182526020909120600160059092020101546001600160a01b0316145b15610f12576000868152600560205260409020805482908110610eb357610eb3612d06565b906000526020600020906005020160030154600560008881526020019081526020016000208281548110610ee957610ee9612d06565b906000526020600020906005020160020154610f059190612d32565b610f0f9083612d9b565b91505b80610f1c81612db3565b915050610ddf565b5090505b9392505050565b60008282604051602001610f44929190612dce565b60405160208183030381529060405280519060200120905092915050565b6001546001600160a01b03163314610fce5760405162461bcd60e51b815260206004820152602960248201527f4432442d4445504f5349542d4f4e4c592d424153452d434f4e54524143542d43604482015268414e2d41434345535360b81b6064820152608401610693565b600180546001600160a01b0319166001600160a01b0392909216919091179055565b6006818154811061100057600080fd5b600091825260209091206007909102018054600182015460028301546003840154600485015460058601546006909601549496506001600160a01b039093169491939092919087565b6000805b6006548110156110f8576110da6006828154811061106d5761106d612d06565b60009182526020918290206040805160e08101825260079093029091018054835260018101546001600160a01b0316938301939093526002830154908201526003820154606082015260048201546080820152600582015460a082015260069091015460c082015261243d565b6110e49083612d9b565b9150806110f081612db3565b91505061104d565b5090565b6000805b60065481101561116157826006828154811061111e5761111e612d06565b906000526020600020906007020160000154141561114f5761114c6006828154811061106d5761106d612d06565b91505b8061115981612db3565b915050611100565b50919050565b6005602052816000526040600020818154811061118357600080fd5b6000918252602090912060059091020180546001820154600283015460038401546004909401546001600160a01b039384169650929091169350919085565b6001600160a01b03811661124a57600160009054906101000a90046001600160a01b03166001600160a01b0316633fc8cef36040518163ffffffff1660e01b8152600401602060405180830381865afa158015611223573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112479190612d49565b90505b6040516370a0823160e01b81523060048201526000906001600160a01b038316906370a0823190602401602060405180830381865afa158015611291573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112b59190612e2b565b6001600160a01b0383166000908152600460209081526040808320546002909252909120549192506112e691612d9b565b8110156113355760405162461bcd60e51b815260206004820152601b60248201527f4432442d4445504f5349542d42414c414e43452d494e56414c494400000000006044820152606401610693565b5050565b6000546001600160a01b0316156113925760405162461bcd60e51b815260206004820152601f60248201527f4432442d4445504f5349542d414c52454144592d494e495449414c495a4544006044820152606401610693565b6001600160a01b0381166113e85760405162461bcd60e51b815260206004820152601f60248201527f4432442d4445504f5349542d494e56414c49442d44414f2d41444452455353006044820152606401610693565b600080546001600160a01b039092166001600160a01b03199283161790556001805490911633179055565b60005b8181101561145b576114498484848481811061143457611434612d06565b90506020020160208101906105f09190612bd8565b8061145381612db3565b915050611416565b50505050565b6001600160a01b038216158015906114795750600081115b8061149657506001600160a01b0382161580156114965750600034115b6114e25760405162461bcd60e51b815260206004820181905260248201527f4432442d4445504f5349542d494e56414c49442d544f4b454e2d414d4f554e546044820152606401610693565b6001600160a01b03821615611502576114fd823330846127cb565b6115c7565b5060015460408051633fc8cef360e01b8152905134926001600160a01b031691633fc8cef39160048083019260209291908290030181865afa15801561154c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115709190612d49565b9150816001600160a01b031663d0e30db0826040518263ffffffff1660e01b81526004016000604051808303818588803b1580156115ad57600080fd5b505af11580156115c1573d6000803e3d6000fd5b50505050505b6001600160a01b038216600090815260026020526040812080548392906115ef908490612d9b565b90915550506001600160a01b038216600090815260036020908152604080832086845290915281208054839290611627908490612d9b565b909155506116369050826111c2565b6000838152600560208181526040808420815160a081018352338082526001600160a01b038981168387019081528386018a8152606085018a81524260808701908152875460018181018a55898e528b8e209851918d0290980180549187166001600160a01b031992831617815594519785018054989096169716969096179093555160028201559051600382015591516004909201919091559488905292909152905490517f1d95434bb9e08b232f54a62aa6512b40e5aaf83565f680797563764d6e9c030d926117379287929091879187919094855260208501939093526001600160a01b039182166040850152606084015216608082015260a00190565b60405180910390a1505050565b60008060008060008060056000898152602001908152602001600020878154811061177157611771612d06565b60009182526020918290206040805160a081018252600590930290910180546001600160a01b03908116808552600180840154831686880152600284015486860152600384015460608701526004938401546080870152548451633fc8cef360e01b815294519597509095911693633fc8cef39380840193908290030181865afa158015611803573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118279190612d49565b6001600160a01b031682602001516001600160a01b03161461184d578160200151611850565b60005b60408301516060840151608090940151929b919a509850919650945092505050565b600154604051631b5fc51160e01b81523360048201526000916001600160a01b031690631b5fc51190602401602060405180830381865afa1580156118bb573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118df9190612e44565b61191c5760405162461bcd60e51b815260206004820152600e60248201526d4432442d4e4f542d4d4f44554c4560901b6044820152606401610693565b8160005b600086815260056020526040902054811015611c4157600086815260056020526040902080546001600160a01b03871691908390811061196257611962612d06565b60009182526020909120600160059092020101546001600160a01b03161415611c2f5760008681526005602052604081208054839081106119a5576119a5612d06565b9060005260206000209060050201600301546005600089815260200190815260200160002083815481106119db576119db612d06565b9060005260206000209060050201600201546119f79190612d32565b905082811115611a045750815b611a0e8184612d32565b60008881526005602052604090208054919450829184908110611a3357611a33612d06565b90600052602060002090600502016003016000828254611a539190612d9b565b909155505082611c2d576001600160a01b038616611baf57600160009054906101000a90046001600160a01b03166001600160a01b0316633fc8cef36040518163ffffffff1660e01b8152600401602060405180830381865afa158015611abe573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611ae29190612d49565b6001600160a01b0316632e1a7d4d866040518263ffffffff1660e01b8152600401611b0f91815260200190565b600060405180830381600087803b158015611b2957600080fd5b505af1158015611b3d573d6000803e3d6000fd5b50506040516000925033915087908381818185875af1925050503d8060008114611b83576040519150601f19603f3d011682016040523d82523d6000602084013e611b88565b606091505b5050905080611ba95760405162461bcd60e51b815260040161069390612d66565b50611be8565b611bba863387612382565b6001600160a01b03861660009081526002602052604081208054879290611be2908490612d32565b90915550505b6001600160a01b03861660009081526003602090815260408083208a845290915281208054879290611c1b908490612d32565b9091555060019450610f289350505050565b505b80611c3981612db3565b915050611920565b50600095945050505050565b60006001600160a01b03821615611ccd576040516370a0823160e01b81523060048201526001600160a01b038316906370a0823190602401602060405180830381865afa158015611ca2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611cc69190612e2b565b9050611d4a565b600160009054906101000a90046001600160a01b03166001600160a01b0316633fc8cef36040518163ffffffff1660e01b8152600401602060405180830381865afa158015611d20573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611d449190612d49565b91504790505b6001600160a01b038216600090815260026020526040902054811115611f4d576001600160a01b038216600090815260026020526040812054611d8d9083612d32565b6001600160a01b0384166000818152600260205260409020849055909150611e0457826001600160a01b031663d0e30db0826040518263ffffffff1660e01b81526004016000604051808303818588803b158015611dea57600080fd5b505af1158015611dfe573d6000803e3d6000fd5b50505050505b6001600160a01b038316600090815260036020908152604080832087845290915281208054839290611e37908490612d9b565b90915550506000848152600560208181526040808420815160a08101835285546001600160a01b039081168252898116828601908152828501898152606084018981524260808601908152865460018181018955888d528a8d209751918c0290970180549187166001600160a01b0319928316178155945196850180549787169790911696909617909555905160028301555160038201559151600490920191909155898652939092529054925490517f1d95434bb9e08b232f54a62aa6512b40e5aaf83565f680797563764d6e9c030d93611f43938993919289928892169094855260208501939093526001600160a01b039182166040850152606084015216608082015260a00190565b60405180910390a1505b611f56826111c2565b505050565b600154604051631b5fc51160e01b81523360048201526001600160a01b0390911690631b5fc51190602401602060405180830381865afa158015611fa3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611fc79190612e44565b6120045760405162461bcd60e51b815260206004820152600e60248201526d4432442d4e4f542d4d4f44554c4560901b6044820152606401610693565b6001600160a01b03841661206c5760405162461bcd60e51b815260206004820152602960248201527f4432442d4445504f5349542d56455354494e472d494e56414c49442d544f4b456044820152684e2d4144445245535360b81b6064820152608401610693565b600083116120c75760405162461bcd60e51b815260206004820152602260248201527f4432442d4445504f5349542d56455354494e472d494e56414c49442d414d4f55604482015261139560f21b6064820152608401610693565b80821061212c5760405162461bcd60e51b815260206004820152602d60248201527f4432442d4445504f5349542d56455354494e47434c4946462d4249474745522d60448201526c2a2420a716a22aa920aa24a7a760991b6064820152608401610693565b612138843330866127cb565b6001600160a01b03841660009081526004602052604081208054859290612160908490612d9b565b90915550506040805160e0810182528681526001600160a01b0380871660208301908152828401878152600060608501818152426080870181815260a088018b815260c089018b8152600680546001810182559652985160079095027ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f81019590955595517ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d4085018054919098166001600160a01b03199091161790965592517ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d41830155517ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d4282015592517ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d4384015590517ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d4483015591517ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d459091015590517fef97a7370a4e7795f507c75b203d7c00650add8c33748093134c783eb79884ed916123409188918891889190889088909586526001600160a01b0394909416602086015260408501929092526060840152608083015260a082015260c00190565b60405180910390a15050505050565b60006001600160a01b038216612366575047919050565b506001600160a01b031660009081526002602052604090205490565b60405163a9059cbb60e01b81526001600160a01b0383811660048301526024820183905284169063a9059cbb906044016020604051808303816000875af11580156123d1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906123f59190612e44565b611f565760405162461bcd60e51b8152602060048201526019602482015278110c910b5513d2d1538b5514905394d191548b519052531151603a1b6044820152606401610693565b60008160400151826060015110156127c65760008260800151426124619190612d32565b90508260a001518110156124785750600092915050565b8260c0015181106124a857826060015183604001516124979190612d32565b6040840151606085015291506124df565b8260c001518184604001516124bd9190612e66565b6124c79190612e85565b915081836060018181516124db9190612d9b565b9052505b8260400151836060015111156125415760405162461bcd60e51b815260206004820152602160248201527f4432442d56455354494e472d434c41494d2d414d4f554e542d4d49534d4154436044820152600960fb1b6064820152608401610693565b6020808401516001600160a01b03166000908152600490915260408120805484929061256e908490612d32565b909155505060015460408051633fc8cef360e01b815290516001600160a01b0390921691633fc8cef3916004808201926020929091908290030181865afa1580156125bd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906125e19190612d49565b6001600160a01b031683602001516001600160a01b03161461261e57602083015160005461261991906001600160a01b031684612382565b612769565b600160009054906101000a90046001600160a01b03166001600160a01b0316633fc8cef36040518163ffffffff1660e01b8152600401602060405180830381865afa158015612671573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906126959190612d49565b6001600160a01b0316632e1a7d4d836040518263ffffffff1660e01b81526004016126c291815260200190565b600060405180830381600087803b1580156126dc57600080fd5b505af11580156126f0573d6000803e3d6000fd5b5050600080546040519193506001600160a01b0316915084908381818185875af1925050503d8060008114612741576040519150601f19603f3d011682016040523d82523d6000602084013e612746565b606091505b50509050806127675760405162461bcd60e51b815260040161069390612d66565b505b8251602080850151600054604080519485526001600160a01b0392831693850193909352838301869052166060830152517fd1f1e5a6af4c0035b91473c4d2fa2ca4d68e610ef6e9f3f173d08958974903499181900360800190a1505b919050565b6040516323b872dd60e01b81526001600160a01b0384811660048301528381166024830152604482018390528516906323b872dd906064016020604051808303816000875af1158015612822573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906128469190612e44565b61145b5760405162461bcd60e51b8152602060048201526019602482015278110c910b5513d2d1538b5514905394d191548b519052531151603a1b6044820152606401610693565b600080604083850312156128a157600080fd5b50508035926020909101359150565b6000806000606084860312156128c557600080fd5b505081359360208301359350604090920135919050565b600081518084526020808501945080840160005b838110156129155781516001600160a01b0316875295820195908201906001016128f0565b509495945050505050565b600081518084526020808501945080840160005b8381101561291557815187529582019590820190600101612934565b60a08152600061296360a08301886128dc565b828103602084015261297581886128dc565b905082810360408401526129898187612920565b9050828103606084015261299d8186612920565b905082810360808401526129b18185612920565b98975050505050505050565b60008083601f8401126129cf57600080fd5b50813567ffffffffffffffff8111156129e757600080fd5b6020830191508360208260051b8501011115612a0257600080fd5b9250929050565b600080600080600060608688031215612a2157600080fd5b85359450602086013567ffffffffffffffff80821115612a4057600080fd5b612a4c89838a016129bd565b90965094506040880135915080821115612a6557600080fd5b50612a72888289016129bd565b969995985093965092949392505050565b6001600160a01b0381168114612a9857600080fd5b50565b600080600060608486031215612ab057600080fd5b833592506020840135612ac281612a83565b91506040840135612ad281612a83565b809150509250925092565b60008060408385031215612af057600080fd5b823591506020830135612b0281612a83565b809150509250929050565b634e487b7160e01b600052604160045260246000fd5b60008060408385031215612b3657600080fd5b823567ffffffffffffffff80821115612b4e57600080fd5b818501915085601f830112612b6257600080fd5b813581811115612b7457612b74612b0d565b604051601f8201601f19908116603f01168101908382118183101715612b9c57612b9c612b0d565b81604052828152886020848701011115612bb557600080fd5b826020860160208301376000602093820184015298969091013596505050505050565b600060208284031215612bea57600080fd5b8135610f2881612a83565b600060208284031215612c0757600080fd5b5035919050565b60008060408385031215612c2157600080fd5b8235612c2c81612a83565b946020939093013593505050565b600080600060408486031215612c4f57600080fd5b83359250602084013567ffffffffffffffff811115612c6d57600080fd5b612c79868287016129bd565b9497909650939450505050565b600080600060608486031215612c9b57600080fd5b833592506020840135612cad81612a83565b929592945050506040919091013590565b600080600080600060a08688031215612cd657600080fd5b853594506020860135612ce881612a83565b94979496505050506040830135926060810135926080909101359150565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b600082821015612d4457612d44612d1c565b500390565b600060208284031215612d5b57600080fd5b8151610f2881612a83565b6020808252818101527f4432442d4445504f5349542d4641494c45442d544f2d53454e442d4554484552604082015260600190565b60008219821115612dae57612dae612d1c565b500190565b6000600019821415612dc757612dc7612d1c565b5060010190565b604081526000835180604084015260005b81811015612dfc5760208187018101516060868401015201612ddf565b81811115612e0e576000606083860101525b50602083019390935250601f91909101601f191601606001919050565b600060208284031215612e3d57600080fd5b5051919050565b600060208284031215612e5657600080fd5b81518015158114610f2857600080fd5b6000816000190483118215151615612e8057612e80612d1c565b500290565b600082612ea257634e487b7160e01b600052601260045260246000fd5b50049056fea2646970667358221220aba500e1c4bd9b424b7315bef78c09dea28ab3a2e117bdfdbb6277c21ea8834a64736f6c634300080a0033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 1240,
        "contract": "contracts/DepositContract.sol:DepositContract",
        "label": "dao",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 1243,
        "contract": "contracts/DepositContract.sol:DepositContract",
        "label": "baseContract",
        "offset": 0,
        "slot": "1",
        "type": "t_contract(IBaseContract)2786"
      },
      {
        "astId": 1247,
        "contract": "contracts/DepositContract.sol:DepositContract",
        "label": "tokenBalances",
        "offset": 0,
        "slot": "2",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 1253,
        "contract": "contracts/DepositContract.sol:DepositContract",
        "label": "availableModuleBalances",
        "offset": 0,
        "slot": "3",
        "type": "t_mapping(t_address,t_mapping(t_bytes32,t_uint256))"
      },
      {
        "astId": 1257,
        "contract": "contracts/DepositContract.sol:DepositContract",
        "label": "vestedBalances",
        "offset": 0,
        "slot": "4",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 1263,
        "contract": "contracts/DepositContract.sol:DepositContract",
        "label": "deposits",
        "offset": 0,
        "slot": "5",
        "type": "t_mapping(t_bytes32,t_array(t_struct(Deposit)1278_storage)dyn_storage)"
      },
      {
        "astId": 1267,
        "contract": "contracts/DepositContract.sol:DepositContract",
        "label": "vestings",
        "offset": 0,
        "slot": "6",
        "type": "t_array(t_struct(Vesting)1293_storage)dyn_storage"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_struct(Deposit)1278_storage)dyn_storage": {
        "base": "t_struct(Deposit)1278_storage",
        "encoding": "dynamic_array",
        "label": "struct DepositContract.Deposit[]",
        "numberOfBytes": "32"
      },
      "t_array(t_struct(Vesting)1293_storage)dyn_storage": {
        "base": "t_struct(Vesting)1293_storage",
        "encoding": "dynamic_array",
        "label": "struct DepositContract.Vesting[]",
        "numberOfBytes": "32"
      },
      "t_bytes32": {
        "encoding": "inplace",
        "label": "bytes32",
        "numberOfBytes": "32"
      },
      "t_contract(IBaseContract)2786": {
        "encoding": "inplace",
        "label": "contract IBaseContract",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_mapping(t_bytes32,t_uint256))": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => mapping(bytes32 => uint256))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_bytes32,t_uint256)"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_mapping(t_bytes32,t_array(t_struct(Deposit)1278_storage)dyn_storage)": {
        "encoding": "mapping",
        "key": "t_bytes32",
        "label": "mapping(bytes32 => struct DepositContract.Deposit[])",
        "numberOfBytes": "32",
        "value": "t_array(t_struct(Deposit)1278_storage)dyn_storage"
      },
      "t_mapping(t_bytes32,t_uint256)": {
        "encoding": "mapping",
        "key": "t_bytes32",
        "label": "mapping(bytes32 => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_struct(Deposit)1278_storage": {
        "encoding": "inplace",
        "label": "struct DepositContract.Deposit",
        "members": [
          {
            "astId": 1269,
            "contract": "contracts/DepositContract.sol:DepositContract",
            "label": "sender",
            "offset": 0,
            "slot": "0",
            "type": "t_address"
          },
          {
            "astId": 1271,
            "contract": "contracts/DepositContract.sol:DepositContract",
            "label": "token",
            "offset": 0,
            "slot": "1",
            "type": "t_address"
          },
          {
            "astId": 1273,
            "contract": "contracts/DepositContract.sol:DepositContract",
            "label": "amount",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256"
          },
          {
            "astId": 1275,
            "contract": "contracts/DepositContract.sol:DepositContract",
            "label": "used",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256"
          },
          {
            "astId": 1277,
            "contract": "contracts/DepositContract.sol:DepositContract",
            "label": "time",
            "offset": 0,
            "slot": "4",
            "type": "t_uint256"
          }
        ],
        "numberOfBytes": "160"
      },
      "t_struct(Vesting)1293_storage": {
        "encoding": "inplace",
        "label": "struct DepositContract.Vesting",
        "members": [
          {
            "astId": 1280,
            "contract": "contracts/DepositContract.sol:DepositContract",
            "label": "actionId",
            "offset": 0,
            "slot": "0",
            "type": "t_bytes32"
          },
          {
            "astId": 1282,
            "contract": "contracts/DepositContract.sol:DepositContract",
            "label": "token",
            "offset": 0,
            "slot": "1",
            "type": "t_address"
          },
          {
            "astId": 1284,
            "contract": "contracts/DepositContract.sol:DepositContract",
            "label": "totalVested",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256"
          },
          {
            "astId": 1286,
            "contract": "contracts/DepositContract.sol:DepositContract",
            "label": "totalClaimed",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256"
          },
          {
            "astId": 1288,
            "contract": "contracts/DepositContract.sol:DepositContract",
            "label": "startTime",
            "offset": 0,
            "slot": "4",
            "type": "t_uint256"
          },
          {
            "astId": 1290,
            "contract": "contracts/DepositContract.sol:DepositContract",
            "label": "cliff",
            "offset": 0,
            "slot": "5",
            "type": "t_uint256"
          },
          {
            "astId": 1292,
            "contract": "contracts/DepositContract.sol:DepositContract",
            "label": "duration",
            "offset": 0,
            "slot": "6",
            "type": "t_uint256"
          }
        ],
        "numberOfBytes": "224"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}