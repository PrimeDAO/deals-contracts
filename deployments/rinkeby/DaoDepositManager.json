{
  "address": "0x0a15E581ae04BAD36c58538bCe1faA0a9627f5fd",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "dealModule",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint32",
          "name": "dealId",
          "type": "uint32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "depositor",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "depositId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Deposited",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "dealModule",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint32",
          "name": "dealId",
          "type": "uint32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "dao",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "claimed",
          "type": "uint256"
        }
      ],
      "name": "VestingClaimed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "dealModule",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint32",
          "name": "dealId",
          "type": "uint32"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "vestingStart",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint32",
          "name": "vestingCliff",
          "type": "uint32"
        },
        {
          "indexed": false,
          "internalType": "uint32",
          "name": "vestingDuration",
          "type": "uint32"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "VestingStarted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "dealModule",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint32",
          "name": "dealId",
          "type": "uint32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "depositor",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint32",
          "name": "depositId",
          "type": "uint32"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Withdrawn",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint32",
          "name": "",
          "type": "uint32"
        }
      ],
      "name": "availableDealBalances",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_module",
          "type": "address"
        },
        {
          "internalType": "uint32",
          "name": "_dealId",
          "type": "uint32"
        }
      ],
      "name": "claimDealVestings",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "tokens",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "amounts",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "claimVestings",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "tokens",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "amounts",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "dao",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "dealManager",
      "outputs": [
        {
          "internalType": "contract IDealManager",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_module",
          "type": "address"
        },
        {
          "internalType": "uint32",
          "name": "_dealId",
          "type": "uint32"
        },
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "deposit",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "deposits",
      "outputs": [
        {
          "internalType": "address",
          "name": "depositor",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "used",
          "type": "uint256"
        },
        {
          "internalType": "uint32",
          "name": "depositedAt",
          "type": "uint32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_module",
          "type": "address"
        },
        {
          "internalType": "uint32",
          "name": "_dealId",
          "type": "uint32"
        },
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        }
      ],
      "name": "getAvailableDealBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        }
      ],
      "name": "getBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_module",
          "type": "address"
        },
        {
          "internalType": "uint32",
          "name": "_dealId",
          "type": "uint32"
        },
        {
          "internalType": "uint32",
          "name": "_depositId",
          "type": "uint32"
        }
      ],
      "name": "getDeposit",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_module",
          "type": "address"
        },
        {
          "internalType": "uint32",
          "name": "_dealId",
          "type": "uint32"
        },
        {
          "internalType": "uint32",
          "name": "_fromDepositId",
          "type": "uint32"
        },
        {
          "internalType": "uint32",
          "name": "_toDepositId",
          "type": "uint32"
        }
      ],
      "name": "getDepositRange",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "senders",
          "type": "address[]"
        },
        {
          "internalType": "address[]",
          "name": "tokens",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "amounts",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256[]",
          "name": "usedAmounts",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256[]",
          "name": "times",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_module",
          "type": "address"
        },
        {
          "internalType": "uint32",
          "name": "_dealId",
          "type": "uint32"
        }
      ],
      "name": "getTotalDepositCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        }
      ],
      "name": "getVestedBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_module",
          "type": "address"
        },
        {
          "internalType": "uint32",
          "name": "_dealId",
          "type": "uint32"
        },
        {
          "internalType": "address",
          "name": "_user",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        }
      ],
      "name": "getWithdrawableAmountOfUser",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_dao",
          "type": "address"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_module",
          "type": "address"
        },
        {
          "internalType": "uint32",
          "name": "_dealId",
          "type": "uint32"
        },
        {
          "internalType": "address[]",
          "name": "_tokens",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "_amounts",
          "type": "uint256[]"
        }
      ],
      "name": "multipleDeposits",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_module",
          "type": "address"
        },
        {
          "internalType": "uint32",
          "name": "_dealId",
          "type": "uint32"
        },
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        }
      ],
      "name": "registerDeposit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_module",
          "type": "address"
        },
        {
          "internalType": "uint32",
          "name": "_dealId",
          "type": "uint32"
        },
        {
          "internalType": "address[]",
          "name": "_tokens",
          "type": "address[]"
        }
      ],
      "name": "registerDeposits",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint32",
          "name": "_dealId",
          "type": "uint32"
        },
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "sendToModule",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_newDaoDepositManager",
          "type": "address"
        }
      ],
      "name": "setDealManagerImplementation",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint32",
          "name": "_dealId",
          "type": "uint32"
        },
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        },
        {
          "internalType": "uint32",
          "name": "_vestingCliff",
          "type": "uint32"
        },
        {
          "internalType": "uint32",
          "name": "_vestingDuration",
          "type": "uint32"
        }
      ],
      "name": "startVesting",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "tokenBalances",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "tokensPerDeal",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        }
      ],
      "name": "verifyBalance",
      "outputs": [],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "vestedBalances",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "vestedTokenAddresses",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "vestedTokenAmounts",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "vestings",
      "outputs": [
        {
          "internalType": "address",
          "name": "dealModule",
          "type": "address"
        },
        {
          "internalType": "uint32",
          "name": "dealId",
          "type": "uint32"
        },
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "totalVested",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "totalClaimed",
          "type": "uint256"
        },
        {
          "internalType": "uint32",
          "name": "startTime",
          "type": "uint32"
        },
        {
          "internalType": "uint32",
          "name": "cliff",
          "type": "uint32"
        },
        {
          "internalType": "uint32",
          "name": "duration",
          "type": "uint32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_module",
          "type": "address"
        },
        {
          "internalType": "uint32",
          "name": "_dealId",
          "type": "uint32"
        },
        {
          "internalType": "uint32",
          "name": "_depositId",
          "type": "uint32"
        }
      ],
      "name": "withdraw",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0xbbc3441d5bcfc87d07f1406795092c23f1329021af842dd889f2299b3f477b02",
  "receipt": {
    "to": null,
    "from": "0xc039897eE5A0d14A3d1F212922FaF7e159Ab619F",
    "contractAddress": "0x0a15E581ae04BAD36c58538bCe1faA0a9627f5fd",
    "transactionIndex": 8,
    "gasUsed": "3348457",
    "logsBloom": "0x
    "blockHash": "0x1b2c595cf2da1e7239f3cd75c51ec547bb741345817aa5a374a638a3be5fa356",
    "transactionHash": "0xbbc3441d5bcfc87d07f1406795092c23f1329021af842dd889f2299b3f477b02",
    "logs": [],
    "blockNumber": 10367721,
    "cumulativeGasUsed": "10637170",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "solcInputHash": "cd75873b169443eace4faca2bc5a1b52",
  "metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"dealModule\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint32\",\"name\":\"dealId\",\"type\":\"uint32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"depositor\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"depositId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Deposited\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"dealModule\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint32\",\"name\":\"dealId\",\"type\":\"uint32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"dao\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"claimed\",\"type\":\"uint256\"}],\"name\":\"VestingClaimed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"dealModule\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint32\",\"name\":\"dealId\",\"type\":\"uint32\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"vestingStart\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"vestingCliff\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"vestingDuration\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"VestingStarted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"dealModule\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint32\",\"name\":\"dealId\",\"type\":\"uint32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"depositor\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"depositId\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Withdrawn\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"name\":\"availableDealBalances\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_module\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"_dealId\",\"type\":\"uint32\"}],\"name\":\"claimDealVestings\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"tokens\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claimVestings\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"tokens\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"dao\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"dealManager\",\"outputs\":[{\"internalType\":\"contract IDealManager\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_module\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"_dealId\",\"type\":\"uint32\"},{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"deposits\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"depositor\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"used\",\"type\":\"uint256\"},{\"internalType\":\"uint32\",\"name\":\"depositedAt\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_module\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"_dealId\",\"type\":\"uint32\"},{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"getAvailableDealBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"getBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_module\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"_dealId\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"_depositId\",\"type\":\"uint32\"}],\"name\":\"getDeposit\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_module\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"_dealId\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"_fromDepositId\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"_toDepositId\",\"type\":\"uint32\"}],\"name\":\"getDepositRange\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"senders\",\"type\":\"address[]\"},{\"internalType\":\"address[]\",\"name\":\"tokens\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"usedAmounts\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"times\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_module\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"_dealId\",\"type\":\"uint32\"}],\"name\":\"getTotalDepositCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"getVestedBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_module\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"_dealId\",\"type\":\"uint32\"},{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"getWithdrawableAmountOfUser\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_dao\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_module\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"_dealId\",\"type\":\"uint32\"},{\"internalType\":\"address[]\",\"name\":\"_tokens\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"_amounts\",\"type\":\"uint256[]\"}],\"name\":\"multipleDeposits\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_module\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"_dealId\",\"type\":\"uint32\"},{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"registerDeposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_module\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"_dealId\",\"type\":\"uint32\"},{\"internalType\":\"address[]\",\"name\":\"_tokens\",\"type\":\"address[]\"}],\"name\":\"registerDeposits\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"_dealId\",\"type\":\"uint32\"},{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"sendToModule\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newDaoDepositManager\",\"type\":\"address\"}],\"name\":\"setDealManagerImplementation\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"_dealId\",\"type\":\"uint32\"},{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"uint32\",\"name\":\"_vestingCliff\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"_vestingDuration\",\"type\":\"uint32\"}],\"name\":\"startVesting\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"tokenBalances\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"tokensPerDeal\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"verifyBalance\",\"outputs\":[],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"vestedBalances\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"vestedTokenAddresses\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"vestedTokenAmounts\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"vestings\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"dealModule\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"dealId\",\"type\":\"uint32\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"totalVested\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalClaimed\",\"type\":\"uint256\"},{\"internalType\":\"uint32\",\"name\":\"startTime\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"cliff\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"duration\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_module\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"_dealId\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"_depositId\",\"type\":\"uint32\"}],\"name\":\"withdraw\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"deposit(address,uint32,address,uint256)\":{\"details\":\"Transfers the token amount to the DaoDepositManager and                          stores the parameters in a Deposit structure\",\"params\":{\"_amount\":\"The amount that is deposited\",\"_dealId\":\"The dealId to which this deposit is part of\",\"_module\":\"The address of the module for which is being deposited\",\"_token\":\"The address of the token that is deposited\"}},\"initialize(address)\":{\"details\":\"Initialize the DaoDepositManager\",\"params\":{\"_dao\":\"The DAO address to which this contract belongs\"}},\"setDealManagerImplementation(address)\":{\"details\":\"Sets a new address for the DealManager implementation\",\"params\":{\"_newDaoDepositManager\":\"The address of the new DealManager\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/DaoDepositManager.sol\":\"DaoDepositManager\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address recipient, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address sender,\\n        address recipient,\\n        uint256 amount\\n    ) external returns (bool);\\n\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n}\\n\",\"keccak256\":\"0x61437cb513a887a1bbad006e7b1c8b414478427d33de47c5600af3c748f108da\",\"license\":\"MIT\"},\"contracts/DaoDepositManager.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0-or-later\\npragma solidity ^0.8.9;\\n\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\nimport \\\"./interfaces/IDealManager.sol\\\";\\nimport \\\"./interfaces/IWETH.sol\\\";\\nimport \\\"./interfaces/IModuleBase.sol\\\";\\n\\ncontract DaoDepositManager {\\n    address public dao;\\n    IDealManager public dealManager;\\n\\n    // token address => balance\\n    mapping(address => uint256) public tokenBalances;\\n    // token address => deal module address => deal module id => balance\\n    mapping(address => mapping(address => mapping(uint32 => uint256)))\\n        public availableDealBalances;\\n    // token address => balance\\n    mapping(address => uint256) public vestedBalances;\\n\\n    // deal module address => deal id => deposits array\\n    mapping(address => mapping(uint256 => Deposit[])) public deposits;\\n\\n    Vesting[] public vestings;\\n    address[] public vestedTokenAddresses;\\n    // token address => amount\\n    mapping(address => uint256) public vestedTokenAmounts;\\n    // deal module address => deal id => token counter\\n    mapping(address => mapping(uint256 => uint256)) public tokensPerDeal;\\n\\n    struct Deposit {\\n        address depositor;\\n        address token;\\n        uint256 amount;\\n        uint256 used;\\n        uint32 depositedAt;\\n    }\\n\\n    struct Vesting {\\n        address dealModule;\\n        uint32 dealId;\\n        address token;\\n        uint256 totalVested;\\n        uint256 totalClaimed;\\n        uint32 startTime;\\n        uint32 cliff;\\n        uint32 duration;\\n    }\\n\\n    event Deposited(\\n        address indexed dealModule,\\n        uint32 indexed dealId,\\n        address indexed depositor,\\n        uint256 depositId,\\n        address token,\\n        uint256 amount\\n    );\\n\\n    event Withdrawn(\\n        address indexed dealModule,\\n        uint32 indexed dealId,\\n        address indexed depositor,\\n        uint32 depositId,\\n        address token,\\n        uint256 amount\\n    );\\n\\n    event VestingStarted(\\n        address indexed dealModule,\\n        uint32 indexed dealId,\\n        uint256 indexed vestingStart,\\n        uint32 vestingCliff,\\n        uint32 vestingDuration,\\n        address token,\\n        uint256 amount\\n    );\\n\\n    event VestingClaimed(\\n        address indexed dealModule,\\n        uint32 indexed dealId,\\n        address indexed dao,\\n        address token,\\n        uint256 claimed\\n    );\\n\\n    /**\\n     * @dev                     Initialize the DaoDepositManager\\n     * @param _dao              The DAO address to which this contract belongs\\n     */\\n    function initialize(address _dao) external {\\n        require(dao == address(0), \\\"D2D-DEPOSIT-ALREADY-INITIALIZED\\\");\\n        require(_dao != address(0), \\\"D2D-DEPOSIT-INVALID-DAO-ADDRESS\\\");\\n        dao = _dao;\\n        dealManager = IDealManager(msg.sender);\\n    }\\n\\n    /**\\n     * @dev                     Sets a new address for the DealManager implementation\\n     * @param _newDaoDepositManager  The address of the new DealManager\\n     */\\n    function setDealManagerImplementation(address _newDaoDepositManager)\\n        external\\n        onlyDealManager\\n    {\\n        dealManager = IDealManager(_newDaoDepositManager);\\n    }\\n\\n    /**\\n     * @dev                     Transfers the token amount to the DaoDepositManager and\\n     *                          stores the parameters in a Deposit structure\\n     * @param _module           The address of the module for which is being deposited\\n     * @param _dealId           The dealId to which this deposit is part of\\n     * @param _token            The address of the token that is deposited\\n     * @param _amount           The amount that is deposited\\n     */\\n    function deposit(\\n        address _module,\\n        uint32 _dealId,\\n        address _token,\\n        uint256 _amount\\n    ) public payable {\\n        require(\\n            (_token != address(0) && _amount > 0) ||\\n                (_token == address(0) && msg.value > 0),\\n            \\\"D2D-DEPOSIT-INVALID-TOKEN-AMOUNT\\\"\\n        );\\n        if (_token != address(0)) {\\n            _transferTokenFrom(_token, msg.sender, address(this), _amount);\\n        } else {\\n            _amount = msg.value;\\n            _token = dealManager.weth();\\n            IWETH(_token).deposit{value: _amount}();\\n        }\\n\\n        tokenBalances[_token] += _amount;\\n        availableDealBalances[_token][_module][_dealId] += _amount;\\n        verifyBalance(_token);\\n        // solhint-disable-next-line not-rely-on-time\\n        deposits[_module][_dealId].push(\\n            Deposit(msg.sender, _token, _amount, 0, uint32(block.timestamp))\\n        );\\n\\n        emit Deposited(\\n            _module,\\n            _dealId,\\n            msg.sender,\\n            deposits[_module][_dealId].length - 1,\\n            _token,\\n            _amount\\n        );\\n    }\\n\\n    function multipleDeposits(\\n        address _module,\\n        uint32 _dealId,\\n        address[] calldata _tokens,\\n        uint256[] calldata _amounts\\n    ) external payable {\\n        // solhint-disable-next-line reason-string\\n        require(\\n            _tokens.length == _amounts.length,\\n            \\\"D2D-DEPOSIT-ARRAY-LENGTH-MISMATCH\\\"\\n        );\\n        for (uint256 i = 0; i < _tokens.length; i++) {\\n            deposit(_module, _dealId, _tokens[i], _amounts[i]);\\n        }\\n    }\\n\\n    function registerDeposit(\\n        address _module,\\n        uint32 _dealId,\\n        address _token\\n    ) public {\\n        uint256 currentBalance = 0;\\n        if (_token != address(0)) {\\n            currentBalance = IERC20(_token).balanceOf(address(this));\\n        } else {\\n            _token = dealManager.weth();\\n            currentBalance = address(this).balance;\\n        }\\n        if (currentBalance > tokenBalances[_token]) {\\n            uint256 amount = currentBalance - tokenBalances[_token];\\n            tokenBalances[_token] = currentBalance;\\n            if (_token == address(0)) {\\n                IWETH(_token).deposit{value: amount}();\\n            }\\n            availableDealBalances[_token][_module][_dealId] += amount;\\n            deposits[_module][_dealId].push(\\n                Deposit(dao, _token, amount, 0, uint32(block.timestamp))\\n            );\\n            emit Deposited(\\n                _module,\\n                _dealId,\\n                dao,\\n                deposits[_module][_dealId].length - 1,\\n                _token,\\n                amount\\n            );\\n        }\\n        verifyBalance(_token);\\n    }\\n\\n    function registerDeposits(\\n        address _module,\\n        uint32 _dealId,\\n        address[] calldata _tokens\\n    ) external {\\n        for (uint256 i = 0; i < _tokens.length; i++) {\\n            registerDeposit(_module, _dealId, _tokens[i]);\\n        }\\n    }\\n\\n    function withdraw(\\n        address _module,\\n        uint32 _dealId,\\n        uint32 _depositId\\n    )\\n        external\\n        returns (\\n            address,\\n            address,\\n            uint256\\n        )\\n    {\\n        require(\\n            deposits[_module][_dealId].length > _depositId,\\n            \\\"D2D-DEPOSIT-INVALID-DEPOSIT-ID\\\"\\n        );\\n        Deposit storage d = deposits[_module][_dealId][_depositId];\\n\\n        // Either the caller did the deposit or it's a dao deposit\\n        // and the caller facilitates the withdraw for the dao\\n        // (which is only possible after the deal expired)\\n\\n        require(\\n            d.depositor == msg.sender ||\\n                (d.depositor == dao &&\\n                    IModuleBase(_module).hasDealExpired(_dealId)),\\n            \\\"D2D-WITHDRAW-NOT-AUTHORIZED\\\"\\n        );\\n\\n        uint256 freeAmount = d.amount - d.used;\\n        // Deposit can't be used by a module or withdrawn already\\n        require(freeAmount > 0, \\\"D2D-DEPOSIT-NOT-WITHDRAWABLE\\\");\\n        d.used = d.amount;\\n        availableDealBalances[d.token][_module][_dealId] -= freeAmount;\\n        tokenBalances[d.token] -= freeAmount;\\n\\n        // If it's a token\\n        if (d.token != dealManager.weth()) {\\n            _transferToken(d.token, d.depositor, freeAmount);\\n            // Else if it's Ether\\n        } else {\\n            IWETH(dealManager.weth()).withdraw(freeAmount);\\n            require(\\n                address(this).balance >= freeAmount,\\n                \\\"D2D-DEPOSIT-INVALID-AMOUNT\\\"\\n            );\\n            (bool sent, ) = d.depositor.call{value: freeAmount}(\\\"\\\");\\n            require(sent, \\\"D2D-DEPOSIT-FAILED-TO-SEND-ETHER\\\");\\n        }\\n\\n        emit Withdrawn(\\n            _module,\\n            _dealId,\\n            d.depositor,\\n            _depositId,\\n            d.token,\\n            freeAmount\\n        );\\n        return (d.depositor, d.token, freeAmount);\\n    }\\n\\n    function sendToModule(\\n        uint32 _dealId,\\n        address _token,\\n        uint256 _amount\\n    ) external onlyModule returns (bool) {\\n        uint256 amountLeft = _amount;\\n        for (uint256 i = 0; i < deposits[msg.sender][_dealId].length; i++) {\\n            if (deposits[msg.sender][_dealId][i].token == _token) {\\n                uint256 freeAmount = deposits[msg.sender][_dealId][i].amount -\\n                    deposits[msg.sender][_dealId][i].used;\\n                if (freeAmount > amountLeft) {\\n                    freeAmount = amountLeft;\\n                }\\n                amountLeft -= freeAmount;\\n                deposits[msg.sender][_dealId][i].used += freeAmount;\\n                if (amountLeft == 0) {\\n                    if (_token == address(0)) {\\n                        IWETH(dealManager.weth()).withdraw(_amount);\\n                        (bool sent, ) = msg.sender.call{value: _amount}(\\\"\\\");\\n                        require(sent, \\\"D2D-DEPOSIT-FAILED-TO-SEND-ETHER\\\");\\n                    } else {\\n                        _transferToken(_token, msg.sender, _amount);\\n                        tokenBalances[_token] -= _amount;\\n                    }\\n                    availableDealBalances[_token][msg.sender][\\n                        _dealId\\n                    ] -= _amount;\\n                    return true;\\n                }\\n            }\\n        }\\n        return false;\\n    }\\n\\n    function startVesting(\\n        uint32 _dealId,\\n        address _token,\\n        uint256 _amount,\\n        uint32 _vestingCliff,\\n        uint32 _vestingDuration\\n    ) external onlyModule {\\n        // solhint-disable-next-line reason-string\\n        require(\\n            _token != address(0),\\n            \\\"D2D-DEPOSIT-VESTING-INVALID-TOKEN-ADDRESS\\\"\\n        );\\n        // solhint-disable-next-line reason-string\\n        require(_amount > 0, \\\"D2D-DEPOSIT-VESTING-INVALID-AMOUNT\\\");\\n        // solhint-disable-next-line reason-string\\n        require(\\n            _vestingCliff < _vestingDuration,\\n            \\\"D2D-DEPOSIT-VESTINGCLIFF-BIGGER-THAN-DURATION\\\"\\n        );\\n\\n        _transferTokenFrom(_token, msg.sender, address(this), _amount);\\n        vestedBalances[_token] += _amount;\\n\\n        vestings.push(\\n            Vesting(\\n                msg.sender,\\n                _dealId,\\n                _token,\\n                _amount,\\n                0,\\n                uint32(block.timestamp),\\n                _vestingCliff,\\n                _vestingDuration\\n            )\\n        );\\n\\n        if (vestedTokenAmounts[_token] == 0) {\\n            vestedTokenAddresses.push(_token);\\n        }\\n\\n        vestedTokenAmounts[_token] += _amount;\\n\\n        // Outside of the if-clause above to catch the\\n        // unlikely edge-case of multiple vestings of the\\n        // same token for one deal. This is necessary\\n        // for deal-based vesting claims to work.\\n        tokensPerDeal[msg.sender][_dealId]++;\\n\\n        emit VestingStarted(\\n            msg.sender,\\n            _dealId,\\n            uint32(block.timestamp),\\n            _vestingCliff,\\n            _vestingDuration,\\n            _token,\\n            _amount\\n        );\\n    }\\n\\n    function claimVestings()\\n        external\\n        returns (address[] memory tokens, uint256[] memory amounts)\\n    {\\n        uint256 vestingCount = vestedTokenAddresses.length;\\n        tokens = new address[](vestingCount);\\n        amounts = new uint256[](vestingCount);\\n\\n        // Copy storage array to memory, since the \\\"original\\\"\\n        // array might change during sendReleasableClaim() if\\n        // the amount of a token reaches zero\\n        for (uint256 i = 0; i < vestingCount; i++) {\\n            tokens[i] = vestedTokenAddresses[i];\\n        }\\n\\n        for (uint256 i = 0; i < vestings.length; i++) {\\n            (address token, uint256 amount) = sendReleasableClaim(vestings[i]);\\n            for (uint256 j = 0; j < vestingCount; j++) {\\n                if (token == tokens[j]) {\\n                    amounts[j] += amount;\\n                }\\n            }\\n        }\\n        return (tokens, amounts);\\n    }\\n\\n    function claimDealVestings(address _module, uint32 _dealId)\\n        external\\n        returns (address[] memory tokens, uint256[] memory amounts)\\n    {\\n        uint256 amountOfTokens = tokensPerDeal[_module][_dealId];\\n        tokens = new address[](amountOfTokens);\\n        amounts = new uint256[](amountOfTokens);\\n        uint256 counter = 0;\\n        for (uint256 i = 0; i < vestings.length; i++) {\\n            if (\\n                vestings[i].dealModule == _module &&\\n                vestings[i].dealId == _dealId\\n            ) {\\n                (tokens[counter], amounts[counter]) = sendReleasableClaim(\\n                    vestings[i]\\n                );\\n                counter++;\\n            }\\n        }\\n    }\\n\\n    function sendReleasableClaim(Vesting memory vesting)\\n        private\\n        returns (address token, uint256 amount)\\n    {\\n        if (vesting.totalClaimed < vesting.totalVested) {\\n            // Check cliff was reached\\n            uint256 elapsedSeconds = uint32(block.timestamp) -\\n                vesting.startTime;\\n\\n            if (elapsedSeconds < vesting.cliff) {\\n                return (address(0), 0);\\n            }\\n            if (elapsedSeconds >= vesting.duration) {\\n                amount = vesting.totalVested - vesting.totalClaimed;\\n                vesting.totalClaimed = vesting.totalVested;\\n                tokensPerDeal[vesting.dealModule][vesting.dealId]--;\\n            } else {\\n                amount =\\n                    (vesting.totalVested * elapsedSeconds) /\\n                    vesting.duration;\\n                vesting.totalClaimed += amount;\\n            }\\n\\n            token = vesting.token;\\n            vestedTokenAmounts[token] -= amount;\\n\\n            // if the corresponding token doesn't have any\\n            // vested amounts in any vesting anymore,\\n            // we remove it from the array\\n            if (vestedTokenAmounts[token] == 0) {\\n                uint256 arrLen = vestedTokenAddresses.length;\\n                for (uint256 i = 0; i < arrLen; i++) {\\n                    if (vestedTokenAddresses[i] == token) {\\n                        // if it's not the last element\\n                        // move the last to the current slot\\n                        if (i != arrLen - 1) {\\n                            vestedTokenAddresses[i] = vestedTokenAddresses[\\n                                arrLen - 1\\n                            ];\\n                        }\\n                        // remove the last entry\\n                        vestedTokenAddresses.pop();\\n                    }\\n                }\\n            }\\n\\n            // solhint-disable-next-line reason-string\\n            require(\\n                vesting.totalClaimed <= vesting.totalVested,\\n                \\\"D2D-VESTING-CLAIM-AMOUNT-MISMATCH\\\"\\n            );\\n            vestedBalances[token] -= amount;\\n            if (token != dealManager.weth()) {\\n                _transferToken(token, dao, amount);\\n            } else {\\n                IWETH(dealManager.weth()).withdraw(amount);\\n                (bool sent, ) = dao.call{value: amount}(\\\"\\\");\\n                require(sent, \\\"D2D-DEPOSIT-FAILED-TO-SEND-ETHER\\\");\\n            }\\n\\n            emit VestingClaimed(\\n                vesting.dealModule,\\n                vesting.dealId,\\n                dao,\\n                token,\\n                amount\\n            );\\n        }\\n    }\\n\\n    function verifyBalance(address _token) public view {\\n        if (_token == address(0)) {\\n            _token = dealManager.weth();\\n        }\\n\\n        uint256 balance = IERC20(_token).balanceOf(address(this));\\n        require(\\n            balance >= tokenBalances[_token] + vestedBalances[_token],\\n            \\\"D2D-DEPOSIT-BALANCE-INVALID\\\"\\n        );\\n    }\\n\\n    function getDeposit(\\n        address _module,\\n        uint32 _dealId,\\n        uint32 _depositId\\n    )\\n        public\\n        view\\n        returns (\\n            address,\\n            address,\\n            uint256,\\n            uint256,\\n            uint256\\n        )\\n    {\\n        Deposit memory d = deposits[_module][_dealId][_depositId];\\n        return (\\n            d.depositor,\\n            d.token == dealManager.weth() ? address(0) : d.token,\\n            d.amount,\\n            d.used,\\n            d.depositedAt\\n        );\\n    }\\n\\n    function getDepositRange(\\n        address _module,\\n        uint32 _dealId,\\n        uint32 _fromDepositId,\\n        uint32 _toDepositId\\n    )\\n        external\\n        view\\n        returns (\\n            address[] memory senders,\\n            address[] memory tokens,\\n            uint256[] memory amounts,\\n            uint256[] memory usedAmounts,\\n            uint256[] memory times\\n        )\\n    {\\n        uint32 range = 2 + _toDepositId - _fromDepositId; // inclusive range\\n        senders = new address[](range);\\n        tokens = new address[](range);\\n        amounts = new uint256[](range);\\n        usedAmounts = new uint256[](range);\\n        times = new uint256[](range);\\n        for (uint32 i = _toDepositId; i <= _fromDepositId; i++) {\\n            (\\n                senders[i],\\n                tokens[i],\\n                amounts[i],\\n                usedAmounts[i],\\n                times[i]\\n            ) = getDeposit(_module, _dealId, i);\\n        }\\n        return (senders, tokens, amounts, usedAmounts, times);\\n    }\\n\\n    function getAvailableDealBalance(\\n        address _module,\\n        uint32 _dealId,\\n        address _token\\n    ) external view returns (uint256) {\\n        return availableDealBalances[_token][_module][_dealId];\\n    }\\n\\n    function getTotalDepositCount(address _module, uint32 _dealId)\\n        external\\n        view\\n        returns (uint256)\\n    {\\n        return deposits[_module][_dealId].length;\\n    }\\n\\n    function getWithdrawableAmountOfUser(\\n        address _module,\\n        uint32 _dealId,\\n        address _user,\\n        address _token\\n    ) external view returns (uint256) {\\n        uint256 freeAmount = 0;\\n        for (uint256 i = 0; i < deposits[_module][_dealId].length; i++) {\\n            if (\\n                deposits[_module][_dealId][i].depositor == _user &&\\n                deposits[_module][_dealId][i].token == _token\\n            ) {\\n                freeAmount += (deposits[_module][_dealId][i].amount -\\n                    deposits[_module][_dealId][i].used);\\n            }\\n        }\\n        return freeAmount;\\n    }\\n\\n    function getBalance(address _token) external view returns (uint256) {\\n        if (_token == address(0)) {\\n            return address(this).balance;\\n        }\\n        return tokenBalances[_token];\\n    }\\n\\n    function getVestedBalance(address _token) external view returns (uint256) {\\n        return vestedBalances[_token];\\n    }\\n\\n    function _transferToken(\\n        address _token,\\n        address _to,\\n        uint256 _amount\\n    ) internal {\\n        require(\\n            IERC20(_token).transfer(_to, _amount),\\n            \\\"D2D-TOKEN-TRANSFER-FAILED\\\"\\n        );\\n    }\\n\\n    function _transferTokenFrom(\\n        address _token,\\n        address _from,\\n        address _to,\\n        uint256 _amount\\n    ) internal {\\n        require(\\n            IERC20(_token).transferFrom(_from, _to, _amount),\\n            \\\"D2D-TOKEN-TRANSFER-FAILED\\\"\\n        );\\n    }\\n\\n    modifier onlyDealManager() {\\n        // solhint-disable-next-line reason-string\\n        require(\\n            msg.sender == address(dealManager),\\n            \\\"D2D-DEPOSIT-ONLY-BASE-CONTRACT-CAN-ACCESS\\\"\\n        );\\n        _;\\n    }\\n\\n    modifier onlyModule() {\\n        require(dealManager.addressIsModule(msg.sender), \\\"D2D-NOT-MODULE\\\");\\n        _;\\n    }\\n}\\n\",\"keccak256\":\"0xc0d62c81ed5a42f3bbceb2f3636f43a59526d1ae9f5c61e2f72a38e7a75a4fb8\",\"license\":\"GPL-3.0-or-later\"},\"contracts/interfaces/IDealManager.sol\":{\"content\":\"// SPDX-License-Identifier: Unlicense\\npragma solidity ^0.8.9;\\n\\ninterface IDealManager {\\n    function createDaoDepositManager(address _dao) external;\\n\\n    function hasDaoDepositManager(address _dao) external view returns (bool);\\n\\n    function getDaoDepositManager(address _dao) external view returns (address);\\n\\n    function owner() external view returns (address);\\n\\n    function weth() external view returns (address);\\n\\n    function addressIsModule(address _address) external view returns (bool);\\n}\\n\",\"keccak256\":\"0xa31274c64c7a0b019b71ee0839fdbf5871a178275fbf483ee201e4743b5440d9\",\"license\":\"Unlicense\"},\"contracts/interfaces/IModuleBase.sol\":{\"content\":\"// SPDX-License-Identifier: Unlicense\\npragma solidity ^0.8.9;\\n\\ninterface IModuleBase {\\n    function moduleIdentifier() external view returns (bytes32);\\n\\n    function dealManager() external view returns (address);\\n\\n    function hasDealExpired(uint32 _dealId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x018e3884c2623613014747a4548002f0fd3e8fb1faa923505a48e1588c3293a5\",\"license\":\"Unlicense\"},\"contracts/interfaces/IWETH.sol\":{\"content\":\"// SPDX-License-Identifier: Unlicense\\npragma solidity >=0.5.0;\\n\\ninterface IWETH {\\n    function deposit() external payable;\\n\\n    function transfer(address to, uint256 value) external returns (bool);\\n\\n    function withdraw(uint256) external;\\n}\\n\",\"keccak256\":\"0x5c3235d86b4ad50863096bdb860ebee226c6fedca70712e95c5cd6005096a5a1\",\"license\":\"Unlicense\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50613b9f806100206000396000f3fe6080604052600436106101c25760003560e01c8063821bee73116100f7578063cb3fdb6111610095578063ee697a4811610064578063ee697a48146106bc578063f42a7590146106dc578063f8b2cb4f1461070d578063f9f77a0b1461072d57600080fd5b8063cb3fdb6114610611578063d40592921461063e578063da28e74a1461065e578063db0730081461067e57600080fd5b8063b7ce5f39116100d1578063b7ce5f3914610565578063c4d66de814610585578063c51a0b33146105a5578063ca516cab146105b857600080fd5b8063821bee73146104ac578063836d21b514610522578063a00ddad11461054557600080fd5b80634cccfee91161016457806362a6a82d1161013e57806362a6a82d146103eb5780636465050314610436578063706b3eb4146104565780637f58b9d31461047657600080fd5b80634cccfee9146103585780634d6e1fcb1461036b578063523fba7f146103be57600080fd5b8063246cd574116101a0578063246cd5741461027a5780634162169f146102d057806343069619146102f05780634ab92e491461031257600080fd5b806301df538d146101c757806315b5a59e146102045780632162a70c1461024a575b600080fd5b3480156101d357600080fd5b506001546101e7906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b34801561021057600080fd5b5061023c61021f3660046133df565b600960209081526000928352604080842090915290825290205481565b6040519081526020016101fb565b34801561025657600080fd5b5061026a610265366004613424565b61075a565b60405190151581526020016101fb565b34801561028657600080fd5b5061023c610295366004613463565b6001600160a01b038082166000908152600360209081526040808320938716835292815282822063ffffffff86168352905220549392505050565b3480156102dc57600080fd5b506000546101e7906001600160a01b031681565b3480156102fc57600080fd5b5061031061030b366004613463565b610b9c565b005b34801561031e57600080fd5b5061033261032d3660046134ac565b610fc0565b604080516001600160a01b039485168152939092166020840152908201526060016101fb565b6103106103663660046134f1565b611530565b34801561037757600080fd5b5061038b6103863660046134ac565b611907565b604080516001600160a01b039687168152959094166020860152928401919091526060830152608082015260a0016101fb565b3480156103ca57600080fd5b5061023c6103d9366004613540565b60026020526000908152604090205481565b3480156103f757600080fd5b5061023c61040636600461355d565b6001600160a01b038216600090815260056020908152604080832063ffffffff8516845290915290205492915050565b34801561044257600080fd5b506101e7610451366004613592565b611a5d565b34801561046257600080fd5b506103106104713660046135f7565b611a87565b34801561048257600080fd5b5061023c610491366004613540565b6001600160a01b031660009081526004602052604090205490565b3480156104b857600080fd5b506104cc6104c7366004613592565b611ad7565b604080516001600160a01b03998a16815263ffffffff9889166020820152989096169588019590955260608701939093526080860191909152831660a0850152821660c08401521660e0820152610100016101fb565b34801561052e57600080fd5b50610537611b4c565b6040516101fb9291906136ce565b34801561055157600080fd5b50610310610560366004613540565b611dad565b34801561057157600080fd5b5061023c6105803660046136fc565b611f24565b34801561059157600080fd5b506103106105a0366004613540565b6120e9565b6103106105b3366004613756565b6121c3565b3480156105c457600080fd5b506105d86105d33660046137e9565b61228c565b604080516001600160a01b03968716815295909416602086015292840191909152606083015263ffffffff16608082015260a0016101fb565b34801561061d57600080fd5b5061023c61062c366004613540565b60046020526000908152604090205481565b34801561064a57600080fd5b5061031061065936600461381e565b6122f9565b34801561066a57600080fd5b50610310610679366004613540565b6127dd565b34801561068a57600080fd5b5061023c61069936600461387e565b600360209081526000938452604080852082529284528284209052825290205481565b3480156106c857600080fd5b506105376106d736600461355d565b61286b565b3480156106e857600080fd5b506106fc6106f73660046138ae565b612a36565b6040516101fb959493929190613904565b34801561071957600080fd5b5061023c610728366004613540565b612cc7565b34801561073957600080fd5b5061023c610748366004613540565b60086020526000908152604090205481565b600154604051631b5fc51160e01b81523360048201526000916001600160a01b031690631b5fc51190602401602060405180830381865afa1580156107a3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107c79190613971565b6108095760405162461bcd60e51b815260206004820152600e60248201526d4432442d4e4f542d4d4f44554c4560901b60448201526064015b60405180910390fd5b8160005b33600090815260056020908152604080832063ffffffff8a168452909152902054811015610b8e5733600090815260056020908152604080832063ffffffff8a168452909152902080546001600160a01b03871691908390811061087357610873613993565b60009182526020909120600160059092020101546001600160a01b03161415610b7c5733600090815260056020908152604080832063ffffffff8a16845290915281208054839081106108c8576108c8613993565b6000918252602080832060059283020160030154338452918152604080842063ffffffff8c16855290915290912080548490811061090857610908613993565b90600052602060002090600502016002015461092491906139bf565b9050828111156109315750815b61093b81846139bf565b33600090815260056020908152604080832063ffffffff8c1684529091529020805491945082918490811061097257610972613993565b9060005260206000209060050201600301600082825461099291906139d6565b909155505082610b7a576001600160a01b038616610aee57600160009054906101000a90046001600160a01b03166001600160a01b0316633fc8cef36040518163ffffffff1660e01b8152600401602060405180830381865afa1580156109fd573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a2191906139ee565b6001600160a01b0316632e1a7d4d866040518263ffffffff1660e01b8152600401610a4e91815260200190565b600060405180830381600087803b158015610a6857600080fd5b505af1158015610a7c573d6000803e3d6000fd5b50506040516000925033915087908381818185875af1925050503d8060008114610ac2576040519150601f19603f3d011682016040523d82523d6000602084013e610ac7565b606091505b5050905080610ae85760405162461bcd60e51b815260040161080090613a0b565b50610b27565b610af9863387612cfa565b6001600160a01b03861660009081526002602052604081208054879290610b219084906139bf565b90915550505b6001600160a01b0386166000908152600360209081526040808320338452825280832063ffffffff8b16845290915281208054879290610b689084906139bf565b9091555060019450610b959350505050565b505b80610b8681613a40565b91505061080d565b5060009150505b9392505050565b60006001600160a01b03821615610c1c576040516370a0823160e01b81523060048201526001600160a01b038316906370a0823190602401602060405180830381865afa158015610bf1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c159190613a5b565b9050610c99565b600160009054906101000a90046001600160a01b03166001600160a01b0316633fc8cef36040518163ffffffff1660e01b8152600401602060405180830381865afa158015610c6f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c9391906139ee565b91504790505b6001600160a01b038216600090815260026020526040902054811115610fb1576001600160a01b038216600090815260026020526040812054610cdc90836139bf565b6001600160a01b0384166000818152600260205260409020849055909150610d5357826001600160a01b031663d0e30db0826040518263ffffffff1660e01b81526004016000604051808303818588803b158015610d3957600080fd5b505af1158015610d4d573d6000803e3d6000fd5b50505050505b6001600160a01b038084166000908152600360209081526040808320938916835292815282822063ffffffff8816835290529081208054839290610d989084906139d6565b9250508190555060056000866001600160a01b03166001600160a01b0316815260200190815260200160002060008563ffffffff1681526020019081526020016000206040518060a0016040528060008054906101000a90046001600160a01b03166001600160a01b03168152602001856001600160a01b03168152602001838152602001600081526020014263ffffffff16815250908060018154018082558091505060019003906000526020600020906005020160009091909190915060008201518160000160006101000a8154816001600160a01b0302191690836001600160a01b0316021790555060208201518160010160006101000a8154816001600160a01b0302191690836001600160a01b03160217905550604082015181600201556060820151816003015560808201518160040160006101000a81548163ffffffff021916908363ffffffff160217905550505060008054906101000a90046001600160a01b03166001600160a01b03168463ffffffff16866001600160a01b03167f024618a4a9ddce575e3f94dc55bbfba25724ec12acaf63035e40b7916e2a692c6001600560008b6001600160a01b03166001600160a01b0316815260200190815260200160002060008a63ffffffff16815260200190815260200160002080549050610f8991906139bf565b604080519182526001600160a01b0389166020830152810186905260600160405180910390a4505b610fba82611dad565b50505050565b6001600160a01b038316600090815260056020908152604080832063ffffffff86811685529252822054829182919085161061103e5760405162461bcd60e51b815260206004820152601e60248201527f4432442d4445504f5349542d494e56414c49442d4445504f5349542d494400006044820152606401610800565b6001600160a01b038616600090815260056020908152604080832063ffffffff808a1685529252822080549091871690811061107c5761107c613993565b6000918252602090912060059091020180549091506001600160a01b031633148061112a575060005481546001600160a01b03908116911614801561112a57506040516333f3352f60e21b815263ffffffff871660048201526001600160a01b0388169063cfccd4bc90602401602060405180830381865afa158015611106573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061112a9190613971565b6111765760405162461bcd60e51b815260206004820152601b60248201527f4432442d57495448445241572d4e4f542d415554484f52495a454400000000006044820152606401610800565b60008160030154826002015461118c91906139bf565b9050600081116111de5760405162461bcd60e51b815260206004820152601c60248201527f4432442d4445504f5349542d4e4f542d574954484452415741424c45000000006044820152606401610800565b600282015460038084019190915560018301546001600160a01b03908116600090815260209283526040808220928c16825291835281812063ffffffff8b168252909252812080548392906112349084906139bf565b909155505060018201546001600160a01b0316600090815260026020526040812080548392906112659084906139bf565b909155505060015460408051633fc8cef360e01b815290516001600160a01b0390921691633fc8cef3916004808201926020929091908290030181865afa1580156112b4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112d891906139ee565b60018301546001600160a01b03908116911614611312576001820154825461130d916001600160a01b03908116911683612cfa565b6114ac565b600160009054906101000a90046001600160a01b03166001600160a01b0316633fc8cef36040518163ffffffff1660e01b8152600401602060405180830381865afa158015611365573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061138991906139ee565b6001600160a01b0316632e1a7d4d826040518263ffffffff1660e01b81526004016113b691815260200190565b600060405180830381600087803b1580156113d057600080fd5b505af11580156113e4573d6000803e3d6000fd5b50505050804710156114385760405162461bcd60e51b815260206004820152601a60248201527f4432442d4445504f5349542d494e56414c49442d414d4f554e540000000000006044820152606401610800565b81546040516000916001600160a01b03169083908381818185875af1925050503d8060008114611484576040519150601f19603f3d011682016040523d82523d6000602084013e611489565b606091505b50509050806114aa5760405162461bcd60e51b815260040161080090613a0b565b505b815460018301546040805163ffffffff8a811682526001600160a01b03938416602083015291810185905292821692908a16918b16907f51d6741c321e9a89b9c34b21ddee7615692c2790cc53d71cc9153bc4154e26999060600160405180910390a481546001909201546001600160a01b03928316999216975095509350505050565b6001600160a01b038216158015906115485750600081115b8061156557506001600160a01b0382161580156115655750600034115b6115b15760405162461bcd60e51b815260206004820181905260248201527f4432442d4445504f5349542d494e56414c49442d544f4b454e2d414d4f554e546044820152606401610800565b6001600160a01b038216156115d1576115cc82333084612dba565b611696565b5060015460408051633fc8cef360e01b8152905134926001600160a01b031691633fc8cef39160048083019260209291908290030181865afa15801561161b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061163f91906139ee565b9150816001600160a01b031663d0e30db0826040518263ffffffff1660e01b81526004016000604051808303818588803b15801561167c57600080fd5b505af1158015611690573d6000803e3d6000fd5b50505050505b6001600160a01b038216600090815260026020526040812080548392906116be9084906139d6565b90915550506001600160a01b038083166000908152600360209081526040808320938816835292815282822063ffffffff87168352905290812080548392906117089084906139d6565b90915550611717905082611dad565b60056000856001600160a01b03166001600160a01b0316815260200190815260200160002060008463ffffffff1681526020019081526020016000206040518060a00160405280336001600160a01b03168152602001846001600160a01b03168152602001838152602001600081526020014263ffffffff16815250908060018154018082558091505060019003906000526020600020906005020160009091909190915060008201518160000160006101000a8154816001600160a01b0302191690836001600160a01b0316021790555060208201518160010160006101000a8154816001600160a01b0302191690836001600160a01b03160217905550604082015181600201556060820151816003015560808201518160040160006101000a81548163ffffffff021916908363ffffffff1602179055505050336001600160a01b03168363ffffffff16856001600160a01b03167f024618a4a9ddce575e3f94dc55bbfba25724ec12acaf63035e40b7916e2a692c6001600560008a6001600160a01b03166001600160a01b0316815260200190815260200160002060008963ffffffff168152602001908152602001600020805490506118db91906139bf565b604080519182526001600160a01b0388166020830152810186905260600160405180910390a450505050565b6001600160a01b038316600090815260056020908152604080832063ffffffff8087168552925282208054839283928392839283929190891690811061194f5761194f613993565b60009182526020918290206040805160a081018252600590930290910180546001600160a01b039081168085526001808401548316868801526002840154868601526003840154606087015260049384015463ffffffff166080870152548451633fc8cef360e01b815294519597509095911693633fc8cef39380840193908290030181865afa1580156119e7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611a0b91906139ee565b6001600160a01b031682602001516001600160a01b031614611a31578160200151611a34565b60005b60408301516060840151608090940151929c919b50995091975063ffffffff1695509350505050565b60078181548110611a6d57600080fd5b6000918252602090912001546001600160a01b0316905081565b60005b81811015611ad057611abe8585858585818110611aa957611aa9613993565b905060200201602081019061030b9190613540565b80611ac881613a40565b915050611a8a565b5050505050565b60068181548110611ae757600080fd5b6000918252602090912060059091020180546001820154600283015460038401546004909401546001600160a01b03808516965063ffffffff600160a01b909504851695931693919291818116916401000000008104821691600160401b9091041688565b60075460609081908067ffffffffffffffff811115611b6d57611b6d613a74565b604051908082528060200260200182016040528015611b96578160200160208202803683370190505b5092508067ffffffffffffffff811115611bb257611bb2613a74565b604051908082528060200260200182016040528015611bdb578160200160208202803683370190505b50915060005b81811015611c565760078181548110611bfc57611bfc613993565b9060005260206000200160009054906101000a90046001600160a01b0316848281518110611c2c57611c2c613993565b6001600160a01b039092166020928302919091019091015280611c4e81613a40565b915050611be1565b5060005b600654811015611da757600080611d1260068481548110611c7d57611c7d613993565b60009182526020918290206040805161010081018252600590930290910180546001600160a01b03808216855263ffffffff600160a01b90920482169585019590955260018201549094169183019190915260028101546060830152600381015460808301526004015480831660a08301526401000000008104831660c0830152600160401b900490911660e0820152612e7d565b9150915060005b84811015611d9157868181518110611d3357611d33613993565b60200260200101516001600160a01b0316836001600160a01b03161415611d7f5781868281518110611d6757611d67613993565b60200260200101818151611d7b91906139d6565b9052505b80611d8981613a40565b915050611d19565b5050508080611d9f90613a40565b915050611c5a565b50509091565b6001600160a01b038116611e3557600160009054906101000a90046001600160a01b03166001600160a01b0316633fc8cef36040518163ffffffff1660e01b8152600401602060405180830381865afa158015611e0e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611e3291906139ee565b90505b6040516370a0823160e01b81523060048201526000906001600160a01b038316906370a0823190602401602060405180830381865afa158015611e7c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611ea09190613a5b565b6001600160a01b038316600090815260046020908152604080832054600290925290912054919250611ed1916139d6565b811015611f205760405162461bcd60e51b815260206004820152601b60248201527f4432442d4445504f5349542d42414c414e43452d494e56414c494400000000006044820152606401610800565b5050565b600080805b6001600160a01b038716600090815260056020908152604080832063ffffffff8a1684529091529020548110156120df576001600160a01b03878116600090815260056020908152604080832063ffffffff8b168452909152902080549187169183908110611f9a57611f9a613993565b60009182526020909120600590910201546001600160a01b031614801561201b57506001600160a01b03878116600090815260056020908152604080832063ffffffff8b168452909152902080549186169183908110611ffc57611ffc613993565b60009182526020909120600160059092020101546001600160a01b0316145b156120cd576001600160a01b038716600090815260056020908152604080832063ffffffff8a168452909152902080548290811061205b5761205b613993565b60009182526020808320600592830201600301546001600160a01b038b168452918152604080842063ffffffff8b1685529091529091208054839081106120a4576120a4613993565b9060005260206000209060050201600201546120c091906139bf565b6120ca90836139d6565b91505b806120d781613a40565b915050611f29565b5095945050505050565b6000546001600160a01b0316156121425760405162461bcd60e51b815260206004820152601f60248201527f4432442d4445504f5349542d414c52454144592d494e495449414c495a4544006044820152606401610800565b6001600160a01b0381166121985760405162461bcd60e51b815260206004820152601f60248201527f4432442d4445504f5349542d494e56414c49442d44414f2d41444452455353006044820152606401610800565b600080546001600160a01b039092166001600160a01b03199283161790556001805490911633179055565b82811461221c5760405162461bcd60e51b815260206004820152602160248201527f4432442d4445504f5349542d41525241592d4c454e4754482d4d49534d4154436044820152600960fb1b6064820152608401610800565b60005b8381101561228357612271878787878581811061223e5761223e613993565b90506020020160208101906122539190613540565b86868681811061226557612265613993565b90506020020135611530565b8061227b81613a40565b91505061221f565b50505050505050565b600560205282600052604060002060205281600052604060002081815481106122b457600080fd5b6000918252602090912060059091020180546001820154600283015460038401546004909401546001600160a01b039384169750929091169450925063ffffffff1685565b600154604051631b5fc51160e01b81523360048201526001600160a01b0390911690631b5fc51190602401602060405180830381865afa158015612341573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906123659190613971565b6123a25760405162461bcd60e51b815260206004820152600e60248201526d4432442d4e4f542d4d4f44554c4560901b6044820152606401610800565b6001600160a01b03841661240a5760405162461bcd60e51b815260206004820152602960248201527f4432442d4445504f5349542d56455354494e472d494e56414c49442d544f4b456044820152684e2d4144445245535360b81b6064820152608401610800565b600083116124655760405162461bcd60e51b815260206004820152602260248201527f4432442d4445504f5349542d56455354494e472d494e56414c49442d414d4f55604482015261139560f21b6064820152608401610800565b8063ffffffff168263ffffffff16106124d65760405162461bcd60e51b815260206004820152602d60248201527f4432442d4445504f5349542d56455354494e47434c4946462d4249474745522d60448201526c2a2420a716a22aa920aa24a7a760991b6064820152608401610800565b6124e284333086612dba565b6001600160a01b0384166000908152600460205260408120805485929061250a9084906139d6565b9091555050604080516101008101825233815263ffffffff80881660208084019182526001600160a01b03898116858701818152606087018b815260006080890181815242891660a08b019081528d8a1660c08c019081528d8b1660e08d01908152600680546001810182559086529c516005909d027ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f810180549c518e16600160a01b026001600160c01b0319909d169e8b169e909e179b909b17909c5594517ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d408a018054919098166001600160a01b0319919091161790965591517ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d4188015590517ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d4287015592517ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d439095018054915197518716600160401b026bffffffff0000000000000000199888166401000000000267ffffffffffffffff1990931696909716959095171795909516939093179091559181526008909152205461271857600780546001810182556000919091527fa66cc928b5edb82af9bd49922954155ab7b0942694bea4ce44661d9a8736c6880180546001600160a01b0319166001600160a01b0386161790555b6001600160a01b038416600090815260086020526040812080548592906127409084906139d6565b909155505033600090815260096020908152604080832063ffffffff89168452909152812080549161277183613a40565b90915550506040805163ffffffff848116825283811660208301526001600160a01b038716828401526060820186905291514283169288169133917fa493d6c9e0b25f100e3bcacc5e236c14199bbdfe5e194c067081619b0998b9829181900360800190a45050505050565b6001546001600160a01b031633146128495760405162461bcd60e51b815260206004820152602960248201527f4432442d4445504f5349542d4f4e4c592d424153452d434f4e54524143542d43604482015268414e2d41434345535360b81b6064820152608401610800565b600180546001600160a01b0319166001600160a01b0392909216919091179055565b6001600160a01b038216600090815260096020908152604080832063ffffffff8516845290915290205460609081908067ffffffffffffffff8111156128b3576128b3613a74565b6040519080825280602002602001820160405280156128dc578160200160208202803683370190505b5092508067ffffffffffffffff8111156128f8576128f8613a74565b604051908082528060200260200182016040528015612921578160200160208202803683370190505b5091506000805b600654811015612a2c57866001600160a01b03166006828154811061294f5761294f613993565b60009182526020909120600590910201546001600160a01b03161480156129ab57508563ffffffff166006828154811061298b5761298b613993565b6000918252602090912060059091020154600160a01b900463ffffffff16145b15612a1a576129c660068281548110611c7d57611c7d613993565b8684815181106129d8576129d8613993565b602002602001018685815181106129f1576129f1613993565b60209081029190910101919091526001600160a01b03909116905281612a1681613a40565b9250505b80612a2481613a40565b915050612928565b5050509250929050565b606080808080600087612a4a886002613a8a565b612a549190613ab2565b90508063ffffffff1667ffffffffffffffff811115612a7557612a75613a74565b604051908082528060200260200182016040528015612a9e578160200160208202803683370190505b5095508063ffffffff1667ffffffffffffffff811115612ac057612ac0613a74565b604051908082528060200260200182016040528015612ae9578160200160208202803683370190505b5094508063ffffffff1667ffffffffffffffff811115612b0b57612b0b613a74565b604051908082528060200260200182016040528015612b34578160200160208202803683370190505b5093508063ffffffff1667ffffffffffffffff811115612b5657612b56613a74565b604051908082528060200260200182016040528015612b7f578160200160208202803683370190505b5092508063ffffffff1667ffffffffffffffff811115612ba157612ba1613a74565b604051908082528060200260200182016040528015612bca578160200160208202803683370190505b509150865b8863ffffffff168163ffffffff1611612cba57612bed8b8b83611907565b8b8663ffffffff1681518110612c0557612c05613993565b602002602001018b8763ffffffff1681518110612c2457612c24613993565b602002602001018b8863ffffffff1681518110612c4357612c43613993565b602002602001018b8963ffffffff1681518110612c6257612c62613993565b602002602001018b8a63ffffffff1681518110612c8157612c81613993565b602090810291909101019490945293909252929091526001600160a01b0392831690529116905280612cb281613ad7565b915050612bcf565b5050945094509450945094565b60006001600160a01b038216612cde575047919050565b506001600160a01b031660009081526002602052604090205490565b60405163a9059cbb60e01b81526001600160a01b0383811660048301526024820183905284169063a9059cbb906044016020604051808303816000875af1158015612d49573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612d6d9190613971565b612db55760405162461bcd60e51b8152602060048201526019602482015278110c910b5513d2d1538b5514905394d191548b519052531151603a1b6044820152606401610800565b505050565b6040516323b872dd60e01b81526001600160a01b0384811660048301528381166024830152604482018390528516906323b872dd906064016020604051808303816000875af1158015612e11573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612e359190613971565b610fba5760405162461bcd60e51b8152602060048201526019602482015278110c910b5513d2d1538b5514905394d191548b519052531151603a1b6044820152606401610800565b6000808260600151836080015110156133c25760008360a0015142612ea29190613ab2565b63ffffffff1690508360c0015163ffffffff16811015612ec85750600093849350915050565b8360e0015163ffffffff168110612f3d5783608001518460600151612eed91906139bf565b6060850151608086015284516001600160a01b031660009081526009602090815260408083208289015163ffffffff1684529091528120805492945090612f3383613afb565b9190505550612f7a565b8360e0015163ffffffff16818560600151612f589190613b12565b612f629190613b31565b91508184608001818151612f7691906139d6565b9052505b6040808501516001600160a01b03811660009081526008602052918220805491955084929091612fab9084906139bf565b90915550506001600160a01b0383166000908152600860205260409020546130e55760075460005b818110156130e257846001600160a01b031660078281548110612ff857612ff8613993565b6000918252602090912001546001600160a01b031614156130d05761301e6001836139bf565b811461309c5760076130316001846139bf565b8154811061304157613041613993565b600091825260209091200154600780546001600160a01b03909216918390811061306d5761306d613993565b9060005260206000200160006101000a8154816001600160a01b0302191690836001600160a01b031602179055505b60078054806130ad576130ad613b53565b600082815260209020810160001990810180546001600160a01b03191690550190555b806130da81613a40565b915050612fd3565b50505b8360600151846080015111156131475760405162461bcd60e51b815260206004820152602160248201527f4432442d56455354494e472d434c41494d2d414d4f554e542d4d49534d4154436044820152600960fb1b6064820152608401610800565b6001600160a01b0383166000908152600460205260408120805484929061316f9084906139bf565b909155505060015460408051633fc8cef360e01b815290516001600160a01b0390921691633fc8cef3916004808201926020929091908290030181865afa1580156131be573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906131e291906139ee565b6001600160a01b0316836001600160a01b031614613217576000546132129084906001600160a01b031684612cfa565b613362565b600160009054906101000a90046001600160a01b03166001600160a01b0316633fc8cef36040518163ffffffff1660e01b8152600401602060405180830381865afa15801561326a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061328e91906139ee565b6001600160a01b0316632e1a7d4d836040518263ffffffff1660e01b81526004016132bb91815260200190565b600060405180830381600087803b1580156132d557600080fd5b505af11580156132e9573d6000803e3d6000fd5b5050600080546040519193506001600160a01b0316915084908381818185875af1925050503d806000811461333a576040519150601f19603f3d011682016040523d82523d6000602084013e61333f565b606091505b50509050806133605760405162461bcd60e51b815260040161080090613a0b565b505b6000546020858101518651604080516001600160a01b0389811682529481018890529484169463ffffffff90931693909116917f965de25c186a7b2d3d49b5ced5c89058b0a7bf8779da6ebe45ea019ec9e7cdf6910160405180910390a4505b915091565b6001600160a01b03811681146133dc57600080fd5b50565b600080604083850312156133f257600080fd5b82356133fd816133c7565b946020939093013593505050565b803563ffffffff8116811461341f57600080fd5b919050565b60008060006060848603121561343957600080fd5b6134428461340b565b92506020840135613452816133c7565b929592945050506040919091013590565b60008060006060848603121561347857600080fd5b8335613483816133c7565b92506134916020850161340b565b915060408401356134a1816133c7565b809150509250925092565b6000806000606084860312156134c157600080fd5b83356134cc816133c7565b92506134da6020850161340b565b91506134e86040850161340b565b90509250925092565b6000806000806080858703121561350757600080fd5b8435613512816133c7565b93506135206020860161340b565b92506040850135613530816133c7565b9396929550929360600135925050565b60006020828403121561355257600080fd5b8135610b95816133c7565b6000806040838503121561357057600080fd5b823561357b816133c7565b91506135896020840161340b565b90509250929050565b6000602082840312156135a457600080fd5b5035919050565b60008083601f8401126135bd57600080fd5b50813567ffffffffffffffff8111156135d557600080fd5b6020830191508360208260051b85010111156135f057600080fd5b9250929050565b6000806000806060858703121561360d57600080fd5b8435613618816133c7565b93506136266020860161340b565b9250604085013567ffffffffffffffff81111561364257600080fd5b61364e878288016135ab565b95989497509550505050565b600081518084526020808501945080840160005b838110156136935781516001600160a01b03168752958201959082019060010161366e565b509495945050505050565b600081518084526020808501945080840160005b83811015613693578151875295820195908201906001016136b2565b6040815260006136e1604083018561365a565b82810360208401526136f3818561369e565b95945050505050565b6000806000806080858703121561371257600080fd5b843561371d816133c7565b935061372b6020860161340b565b9250604085013561373b816133c7565b9150606085013561374b816133c7565b939692955090935050565b6000806000806000806080878903121561376f57600080fd5b863561377a816133c7565b95506137886020880161340b565b9450604087013567ffffffffffffffff808211156137a557600080fd5b6137b18a838b016135ab565b909650945060608901359150808211156137ca57600080fd5b506137d789828a016135ab565b979a9699509497509295939492505050565b6000806000606084860312156137fe57600080fd5b8335613809816133c7565b95602085013595506040909401359392505050565b600080600080600060a0868803121561383657600080fd5b61383f8661340b565b9450602086013561384f816133c7565b9350604086013592506138646060870161340b565b91506138726080870161340b565b90509295509295909350565b60008060006060848603121561389357600080fd5b833561389e816133c7565b925060208401356134da816133c7565b600080600080608085870312156138c457600080fd5b84356138cf816133c7565b93506138dd6020860161340b565b92506138eb6040860161340b565b91506138f96060860161340b565b905092959194509250565b60a08152600061391760a083018861365a565b8281036020840152613929818861365a565b9050828103604084015261393d818761369e565b90508281036060840152613951818661369e565b90508281036080840152613965818561369e565b98975050505050505050565b60006020828403121561398357600080fd5b81518015158114610b9557600080fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b6000828210156139d1576139d16139a9565b500390565b600082198211156139e9576139e96139a9565b500190565b600060208284031215613a0057600080fd5b8151610b95816133c7565b6020808252818101527f4432442d4445504f5349542d4641494c45442d544f2d53454e442d4554484552604082015260600190565b6000600019821415613a5457613a546139a9565b5060010190565b600060208284031215613a6d57600080fd5b5051919050565b634e487b7160e01b600052604160045260246000fd5b600063ffffffff808316818516808303821115613aa957613aa96139a9565b01949350505050565b600063ffffffff83811690831681811015613acf57613acf6139a9565b039392505050565b600063ffffffff80831681811415613af157613af16139a9565b6001019392505050565b600081613b0a57613b0a6139a9565b506000190190565b6000816000190483118215151615613b2c57613b2c6139a9565b500290565b600082613b4e57634e487b7160e01b600052601260045260246000fd5b500490565b634e487b7160e01b600052603160045260246000fdfea2646970667358221220b6936800373b5b465a465350c364904709f57dd7f27e19aa7cc149dff4a9bcd664736f6c634300080a0033",
  "deployedBytecode": "0x6080604052600436106101c25760003560e01c8063821bee73116100f7578063cb3fdb6111610095578063ee697a4811610064578063ee697a48146106bc578063f42a7590146106dc578063f8b2cb4f1461070d578063f9f77a0b1461072d57600080fd5b8063cb3fdb6114610611578063d40592921461063e578063da28e74a1461065e578063db0730081461067e57600080fd5b8063b7ce5f39116100d1578063b7ce5f3914610565578063c4d66de814610585578063c51a0b33146105a5578063ca516cab146105b857600080fd5b8063821bee73146104ac578063836d21b514610522578063a00ddad11461054557600080fd5b80634cccfee91161016457806362a6a82d1161013e57806362a6a82d146103eb5780636465050314610436578063706b3eb4146104565780637f58b9d31461047657600080fd5b80634cccfee9146103585780634d6e1fcb1461036b578063523fba7f146103be57600080fd5b8063246cd574116101a0578063246cd5741461027a5780634162169f146102d057806343069619146102f05780634ab92e491461031257600080fd5b806301df538d146101c757806315b5a59e146102045780632162a70c1461024a575b600080fd5b3480156101d357600080fd5b506001546101e7906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b34801561021057600080fd5b5061023c61021f3660046133df565b600960209081526000928352604080842090915290825290205481565b6040519081526020016101fb565b34801561025657600080fd5b5061026a610265366004613424565b61075a565b60405190151581526020016101fb565b34801561028657600080fd5b5061023c610295366004613463565b6001600160a01b038082166000908152600360209081526040808320938716835292815282822063ffffffff86168352905220549392505050565b3480156102dc57600080fd5b506000546101e7906001600160a01b031681565b3480156102fc57600080fd5b5061031061030b366004613463565b610b9c565b005b34801561031e57600080fd5b5061033261032d3660046134ac565b610fc0565b604080516001600160a01b039485168152939092166020840152908201526060016101fb565b6103106103663660046134f1565b611530565b34801561037757600080fd5b5061038b6103863660046134ac565b611907565b604080516001600160a01b039687168152959094166020860152928401919091526060830152608082015260a0016101fb565b3480156103ca57600080fd5b5061023c6103d9366004613540565b60026020526000908152604090205481565b3480156103f757600080fd5b5061023c61040636600461355d565b6001600160a01b038216600090815260056020908152604080832063ffffffff8516845290915290205492915050565b34801561044257600080fd5b506101e7610451366004613592565b611a5d565b34801561046257600080fd5b506103106104713660046135f7565b611a87565b34801561048257600080fd5b5061023c610491366004613540565b6001600160a01b031660009081526004602052604090205490565b3480156104b857600080fd5b506104cc6104c7366004613592565b611ad7565b604080516001600160a01b03998a16815263ffffffff9889166020820152989096169588019590955260608701939093526080860191909152831660a0850152821660c08401521660e0820152610100016101fb565b34801561052e57600080fd5b50610537611b4c565b6040516101fb9291906136ce565b34801561055157600080fd5b50610310610560366004613540565b611dad565b34801561057157600080fd5b5061023c6105803660046136fc565b611f24565b34801561059157600080fd5b506103106105a0366004613540565b6120e9565b6103106105b3366004613756565b6121c3565b3480156105c457600080fd5b506105d86105d33660046137e9565b61228c565b604080516001600160a01b03968716815295909416602086015292840191909152606083015263ffffffff16608082015260a0016101fb565b34801561061d57600080fd5b5061023c61062c366004613540565b60046020526000908152604090205481565b34801561064a57600080fd5b5061031061065936600461381e565b6122f9565b34801561066a57600080fd5b50610310610679366004613540565b6127dd565b34801561068a57600080fd5b5061023c61069936600461387e565b600360209081526000938452604080852082529284528284209052825290205481565b3480156106c857600080fd5b506105376106d736600461355d565b61286b565b3480156106e857600080fd5b506106fc6106f73660046138ae565b612a36565b6040516101fb959493929190613904565b34801561071957600080fd5b5061023c610728366004613540565b612cc7565b34801561073957600080fd5b5061023c610748366004613540565b60086020526000908152604090205481565b600154604051631b5fc51160e01b81523360048201526000916001600160a01b031690631b5fc51190602401602060405180830381865afa1580156107a3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107c79190613971565b6108095760405162461bcd60e51b815260206004820152600e60248201526d4432442d4e4f542d4d4f44554c4560901b60448201526064015b60405180910390fd5b8160005b33600090815260056020908152604080832063ffffffff8a168452909152902054811015610b8e5733600090815260056020908152604080832063ffffffff8a168452909152902080546001600160a01b03871691908390811061087357610873613993565b60009182526020909120600160059092020101546001600160a01b03161415610b7c5733600090815260056020908152604080832063ffffffff8a16845290915281208054839081106108c8576108c8613993565b6000918252602080832060059283020160030154338452918152604080842063ffffffff8c16855290915290912080548490811061090857610908613993565b90600052602060002090600502016002015461092491906139bf565b9050828111156109315750815b61093b81846139bf565b33600090815260056020908152604080832063ffffffff8c1684529091529020805491945082918490811061097257610972613993565b9060005260206000209060050201600301600082825461099291906139d6565b909155505082610b7a576001600160a01b038616610aee57600160009054906101000a90046001600160a01b03166001600160a01b0316633fc8cef36040518163ffffffff1660e01b8152600401602060405180830381865afa1580156109fd573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a2191906139ee565b6001600160a01b0316632e1a7d4d866040518263ffffffff1660e01b8152600401610a4e91815260200190565b600060405180830381600087803b158015610a6857600080fd5b505af1158015610a7c573d6000803e3d6000fd5b50506040516000925033915087908381818185875af1925050503d8060008114610ac2576040519150601f19603f3d011682016040523d82523d6000602084013e610ac7565b606091505b5050905080610ae85760405162461bcd60e51b815260040161080090613a0b565b50610b27565b610af9863387612cfa565b6001600160a01b03861660009081526002602052604081208054879290610b219084906139bf565b90915550505b6001600160a01b0386166000908152600360209081526040808320338452825280832063ffffffff8b16845290915281208054879290610b689084906139bf565b9091555060019450610b959350505050565b505b80610b8681613a40565b91505061080d565b5060009150505b9392505050565b60006001600160a01b03821615610c1c576040516370a0823160e01b81523060048201526001600160a01b038316906370a0823190602401602060405180830381865afa158015610bf1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c159190613a5b565b9050610c99565b600160009054906101000a90046001600160a01b03166001600160a01b0316633fc8cef36040518163ffffffff1660e01b8152600401602060405180830381865afa158015610c6f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c9391906139ee565b91504790505b6001600160a01b038216600090815260026020526040902054811115610fb1576001600160a01b038216600090815260026020526040812054610cdc90836139bf565b6001600160a01b0384166000818152600260205260409020849055909150610d5357826001600160a01b031663d0e30db0826040518263ffffffff1660e01b81526004016000604051808303818588803b158015610d3957600080fd5b505af1158015610d4d573d6000803e3d6000fd5b50505050505b6001600160a01b038084166000908152600360209081526040808320938916835292815282822063ffffffff8816835290529081208054839290610d989084906139d6565b9250508190555060056000866001600160a01b03166001600160a01b0316815260200190815260200160002060008563ffffffff1681526020019081526020016000206040518060a0016040528060008054906101000a90046001600160a01b03166001600160a01b03168152602001856001600160a01b03168152602001838152602001600081526020014263ffffffff16815250908060018154018082558091505060019003906000526020600020906005020160009091909190915060008201518160000160006101000a8154816001600160a01b0302191690836001600160a01b0316021790555060208201518160010160006101000a8154816001600160a01b0302191690836001600160a01b03160217905550604082015181600201556060820151816003015560808201518160040160006101000a81548163ffffffff021916908363ffffffff160217905550505060008054906101000a90046001600160a01b03166001600160a01b03168463ffffffff16866001600160a01b03167f024618a4a9ddce575e3f94dc55bbfba25724ec12acaf63035e40b7916e2a692c6001600560008b6001600160a01b03166001600160a01b0316815260200190815260200160002060008a63ffffffff16815260200190815260200160002080549050610f8991906139bf565b604080519182526001600160a01b0389166020830152810186905260600160405180910390a4505b610fba82611dad565b50505050565b6001600160a01b038316600090815260056020908152604080832063ffffffff86811685529252822054829182919085161061103e5760405162461bcd60e51b815260206004820152601e60248201527f4432442d4445504f5349542d494e56414c49442d4445504f5349542d494400006044820152606401610800565b6001600160a01b038616600090815260056020908152604080832063ffffffff808a1685529252822080549091871690811061107c5761107c613993565b6000918252602090912060059091020180549091506001600160a01b031633148061112a575060005481546001600160a01b03908116911614801561112a57506040516333f3352f60e21b815263ffffffff871660048201526001600160a01b0388169063cfccd4bc90602401602060405180830381865afa158015611106573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061112a9190613971565b6111765760405162461bcd60e51b815260206004820152601b60248201527f4432442d57495448445241572d4e4f542d415554484f52495a454400000000006044820152606401610800565b60008160030154826002015461118c91906139bf565b9050600081116111de5760405162461bcd60e51b815260206004820152601c60248201527f4432442d4445504f5349542d4e4f542d574954484452415741424c45000000006044820152606401610800565b600282015460038084019190915560018301546001600160a01b03908116600090815260209283526040808220928c16825291835281812063ffffffff8b168252909252812080548392906112349084906139bf565b909155505060018201546001600160a01b0316600090815260026020526040812080548392906112659084906139bf565b909155505060015460408051633fc8cef360e01b815290516001600160a01b0390921691633fc8cef3916004808201926020929091908290030181865afa1580156112b4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112d891906139ee565b60018301546001600160a01b03908116911614611312576001820154825461130d916001600160a01b03908116911683612cfa565b6114ac565b600160009054906101000a90046001600160a01b03166001600160a01b0316633fc8cef36040518163ffffffff1660e01b8152600401602060405180830381865afa158015611365573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061138991906139ee565b6001600160a01b0316632e1a7d4d826040518263ffffffff1660e01b81526004016113b691815260200190565b600060405180830381600087803b1580156113d057600080fd5b505af11580156113e4573d6000803e3d6000fd5b50505050804710156114385760405162461bcd60e51b815260206004820152601a60248201527f4432442d4445504f5349542d494e56414c49442d414d4f554e540000000000006044820152606401610800565b81546040516000916001600160a01b03169083908381818185875af1925050503d8060008114611484576040519150601f19603f3d011682016040523d82523d6000602084013e611489565b606091505b50509050806114aa5760405162461bcd60e51b815260040161080090613a0b565b505b815460018301546040805163ffffffff8a811682526001600160a01b03938416602083015291810185905292821692908a16918b16907f51d6741c321e9a89b9c34b21ddee7615692c2790cc53d71cc9153bc4154e26999060600160405180910390a481546001909201546001600160a01b03928316999216975095509350505050565b6001600160a01b038216158015906115485750600081115b8061156557506001600160a01b0382161580156115655750600034115b6115b15760405162461bcd60e51b815260206004820181905260248201527f4432442d4445504f5349542d494e56414c49442d544f4b454e2d414d4f554e546044820152606401610800565b6001600160a01b038216156115d1576115cc82333084612dba565b611696565b5060015460408051633fc8cef360e01b8152905134926001600160a01b031691633fc8cef39160048083019260209291908290030181865afa15801561161b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061163f91906139ee565b9150816001600160a01b031663d0e30db0826040518263ffffffff1660e01b81526004016000604051808303818588803b15801561167c57600080fd5b505af1158015611690573d6000803e3d6000fd5b50505050505b6001600160a01b038216600090815260026020526040812080548392906116be9084906139d6565b90915550506001600160a01b038083166000908152600360209081526040808320938816835292815282822063ffffffff87168352905290812080548392906117089084906139d6565b90915550611717905082611dad565b60056000856001600160a01b03166001600160a01b0316815260200190815260200160002060008463ffffffff1681526020019081526020016000206040518060a00160405280336001600160a01b03168152602001846001600160a01b03168152602001838152602001600081526020014263ffffffff16815250908060018154018082558091505060019003906000526020600020906005020160009091909190915060008201518160000160006101000a8154816001600160a01b0302191690836001600160a01b0316021790555060208201518160010160006101000a8154816001600160a01b0302191690836001600160a01b03160217905550604082015181600201556060820151816003015560808201518160040160006101000a81548163ffffffff021916908363ffffffff1602179055505050336001600160a01b03168363ffffffff16856001600160a01b03167f024618a4a9ddce575e3f94dc55bbfba25724ec12acaf63035e40b7916e2a692c6001600560008a6001600160a01b03166001600160a01b0316815260200190815260200160002060008963ffffffff168152602001908152602001600020805490506118db91906139bf565b604080519182526001600160a01b0388166020830152810186905260600160405180910390a450505050565b6001600160a01b038316600090815260056020908152604080832063ffffffff8087168552925282208054839283928392839283929190891690811061194f5761194f613993565b60009182526020918290206040805160a081018252600590930290910180546001600160a01b039081168085526001808401548316868801526002840154868601526003840154606087015260049384015463ffffffff166080870152548451633fc8cef360e01b815294519597509095911693633fc8cef39380840193908290030181865afa1580156119e7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611a0b91906139ee565b6001600160a01b031682602001516001600160a01b031614611a31578160200151611a34565b60005b60408301516060840151608090940151929c919b50995091975063ffffffff1695509350505050565b60078181548110611a6d57600080fd5b6000918252602090912001546001600160a01b0316905081565b60005b81811015611ad057611abe8585858585818110611aa957611aa9613993565b905060200201602081019061030b9190613540565b80611ac881613a40565b915050611a8a565b5050505050565b60068181548110611ae757600080fd5b6000918252602090912060059091020180546001820154600283015460038401546004909401546001600160a01b03808516965063ffffffff600160a01b909504851695931693919291818116916401000000008104821691600160401b9091041688565b60075460609081908067ffffffffffffffff811115611b6d57611b6d613a74565b604051908082528060200260200182016040528015611b96578160200160208202803683370190505b5092508067ffffffffffffffff811115611bb257611bb2613a74565b604051908082528060200260200182016040528015611bdb578160200160208202803683370190505b50915060005b81811015611c565760078181548110611bfc57611bfc613993565b9060005260206000200160009054906101000a90046001600160a01b0316848281518110611c2c57611c2c613993565b6001600160a01b039092166020928302919091019091015280611c4e81613a40565b915050611be1565b5060005b600654811015611da757600080611d1260068481548110611c7d57611c7d613993565b60009182526020918290206040805161010081018252600590930290910180546001600160a01b03808216855263ffffffff600160a01b90920482169585019590955260018201549094169183019190915260028101546060830152600381015460808301526004015480831660a08301526401000000008104831660c0830152600160401b900490911660e0820152612e7d565b9150915060005b84811015611d9157868181518110611d3357611d33613993565b60200260200101516001600160a01b0316836001600160a01b03161415611d7f5781868281518110611d6757611d67613993565b60200260200101818151611d7b91906139d6565b9052505b80611d8981613a40565b915050611d19565b5050508080611d9f90613a40565b915050611c5a565b50509091565b6001600160a01b038116611e3557600160009054906101000a90046001600160a01b03166001600160a01b0316633fc8cef36040518163ffffffff1660e01b8152600401602060405180830381865afa158015611e0e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611e3291906139ee565b90505b6040516370a0823160e01b81523060048201526000906001600160a01b038316906370a0823190602401602060405180830381865afa158015611e7c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611ea09190613a5b565b6001600160a01b038316600090815260046020908152604080832054600290925290912054919250611ed1916139d6565b811015611f205760405162461bcd60e51b815260206004820152601b60248201527f4432442d4445504f5349542d42414c414e43452d494e56414c494400000000006044820152606401610800565b5050565b600080805b6001600160a01b038716600090815260056020908152604080832063ffffffff8a1684529091529020548110156120df576001600160a01b03878116600090815260056020908152604080832063ffffffff8b168452909152902080549187169183908110611f9a57611f9a613993565b60009182526020909120600590910201546001600160a01b031614801561201b57506001600160a01b03878116600090815260056020908152604080832063ffffffff8b168452909152902080549186169183908110611ffc57611ffc613993565b60009182526020909120600160059092020101546001600160a01b0316145b156120cd576001600160a01b038716600090815260056020908152604080832063ffffffff8a168452909152902080548290811061205b5761205b613993565b60009182526020808320600592830201600301546001600160a01b038b168452918152604080842063ffffffff8b1685529091529091208054839081106120a4576120a4613993565b9060005260206000209060050201600201546120c091906139bf565b6120ca90836139d6565b91505b806120d781613a40565b915050611f29565b5095945050505050565b6000546001600160a01b0316156121425760405162461bcd60e51b815260206004820152601f60248201527f4432442d4445504f5349542d414c52454144592d494e495449414c495a4544006044820152606401610800565b6001600160a01b0381166121985760405162461bcd60e51b815260206004820152601f60248201527f4432442d4445504f5349542d494e56414c49442d44414f2d41444452455353006044820152606401610800565b600080546001600160a01b039092166001600160a01b03199283161790556001805490911633179055565b82811461221c5760405162461bcd60e51b815260206004820152602160248201527f4432442d4445504f5349542d41525241592d4c454e4754482d4d49534d4154436044820152600960fb1b6064820152608401610800565b60005b8381101561228357612271878787878581811061223e5761223e613993565b90506020020160208101906122539190613540565b86868681811061226557612265613993565b90506020020135611530565b8061227b81613a40565b91505061221f565b50505050505050565b600560205282600052604060002060205281600052604060002081815481106122b457600080fd5b6000918252602090912060059091020180546001820154600283015460038401546004909401546001600160a01b039384169750929091169450925063ffffffff1685565b600154604051631b5fc51160e01b81523360048201526001600160a01b0390911690631b5fc51190602401602060405180830381865afa158015612341573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906123659190613971565b6123a25760405162461bcd60e51b815260206004820152600e60248201526d4432442d4e4f542d4d4f44554c4560901b6044820152606401610800565b6001600160a01b03841661240a5760405162461bcd60e51b815260206004820152602960248201527f4432442d4445504f5349542d56455354494e472d494e56414c49442d544f4b456044820152684e2d4144445245535360b81b6064820152608401610800565b600083116124655760405162461bcd60e51b815260206004820152602260248201527f4432442d4445504f5349542d56455354494e472d494e56414c49442d414d4f55604482015261139560f21b6064820152608401610800565b8063ffffffff168263ffffffff16106124d65760405162461bcd60e51b815260206004820152602d60248201527f4432442d4445504f5349542d56455354494e47434c4946462d4249474745522d60448201526c2a2420a716a22aa920aa24a7a760991b6064820152608401610800565b6124e284333086612dba565b6001600160a01b0384166000908152600460205260408120805485929061250a9084906139d6565b9091555050604080516101008101825233815263ffffffff80881660208084019182526001600160a01b03898116858701818152606087018b815260006080890181815242891660a08b019081528d8a1660c08c019081528d8b1660e08d01908152600680546001810182559086529c516005909d027ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f810180549c518e16600160a01b026001600160c01b0319909d169e8b169e909e179b909b17909c5594517ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d408a018054919098166001600160a01b0319919091161790965591517ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d4188015590517ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d4287015592517ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d439095018054915197518716600160401b026bffffffff0000000000000000199888166401000000000267ffffffffffffffff1990931696909716959095171795909516939093179091559181526008909152205461271857600780546001810182556000919091527fa66cc928b5edb82af9bd49922954155ab7b0942694bea4ce44661d9a8736c6880180546001600160a01b0319166001600160a01b0386161790555b6001600160a01b038416600090815260086020526040812080548592906127409084906139d6565b909155505033600090815260096020908152604080832063ffffffff89168452909152812080549161277183613a40565b90915550506040805163ffffffff848116825283811660208301526001600160a01b038716828401526060820186905291514283169288169133917fa493d6c9e0b25f100e3bcacc5e236c14199bbdfe5e194c067081619b0998b9829181900360800190a45050505050565b6001546001600160a01b031633146128495760405162461bcd60e51b815260206004820152602960248201527f4432442d4445504f5349542d4f4e4c592d424153452d434f4e54524143542d43604482015268414e2d41434345535360b81b6064820152608401610800565b600180546001600160a01b0319166001600160a01b0392909216919091179055565b6001600160a01b038216600090815260096020908152604080832063ffffffff8516845290915290205460609081908067ffffffffffffffff8111156128b3576128b3613a74565b6040519080825280602002602001820160405280156128dc578160200160208202803683370190505b5092508067ffffffffffffffff8111156128f8576128f8613a74565b604051908082528060200260200182016040528015612921578160200160208202803683370190505b5091506000805b600654811015612a2c57866001600160a01b03166006828154811061294f5761294f613993565b60009182526020909120600590910201546001600160a01b03161480156129ab57508563ffffffff166006828154811061298b5761298b613993565b6000918252602090912060059091020154600160a01b900463ffffffff16145b15612a1a576129c660068281548110611c7d57611c7d613993565b8684815181106129d8576129d8613993565b602002602001018685815181106129f1576129f1613993565b60209081029190910101919091526001600160a01b03909116905281612a1681613a40565b9250505b80612a2481613a40565b915050612928565b5050509250929050565b606080808080600087612a4a886002613a8a565b612a549190613ab2565b90508063ffffffff1667ffffffffffffffff811115612a7557612a75613a74565b604051908082528060200260200182016040528015612a9e578160200160208202803683370190505b5095508063ffffffff1667ffffffffffffffff811115612ac057612ac0613a74565b604051908082528060200260200182016040528015612ae9578160200160208202803683370190505b5094508063ffffffff1667ffffffffffffffff811115612b0b57612b0b613a74565b604051908082528060200260200182016040528015612b34578160200160208202803683370190505b5093508063ffffffff1667ffffffffffffffff811115612b5657612b56613a74565b604051908082528060200260200182016040528015612b7f578160200160208202803683370190505b5092508063ffffffff1667ffffffffffffffff811115612ba157612ba1613a74565b604051908082528060200260200182016040528015612bca578160200160208202803683370190505b509150865b8863ffffffff168163ffffffff1611612cba57612bed8b8b83611907565b8b8663ffffffff1681518110612c0557612c05613993565b602002602001018b8763ffffffff1681518110612c2457612c24613993565b602002602001018b8863ffffffff1681518110612c4357612c43613993565b602002602001018b8963ffffffff1681518110612c6257612c62613993565b602002602001018b8a63ffffffff1681518110612c8157612c81613993565b602090810291909101019490945293909252929091526001600160a01b0392831690529116905280612cb281613ad7565b915050612bcf565b5050945094509450945094565b60006001600160a01b038216612cde575047919050565b506001600160a01b031660009081526002602052604090205490565b60405163a9059cbb60e01b81526001600160a01b0383811660048301526024820183905284169063a9059cbb906044016020604051808303816000875af1158015612d49573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612d6d9190613971565b612db55760405162461bcd60e51b8152602060048201526019602482015278110c910b5513d2d1538b5514905394d191548b519052531151603a1b6044820152606401610800565b505050565b6040516323b872dd60e01b81526001600160a01b0384811660048301528381166024830152604482018390528516906323b872dd906064016020604051808303816000875af1158015612e11573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612e359190613971565b610fba5760405162461bcd60e51b8152602060048201526019602482015278110c910b5513d2d1538b5514905394d191548b519052531151603a1b6044820152606401610800565b6000808260600151836080015110156133c25760008360a0015142612ea29190613ab2565b63ffffffff1690508360c0015163ffffffff16811015612ec85750600093849350915050565b8360e0015163ffffffff168110612f3d5783608001518460600151612eed91906139bf565b6060850151608086015284516001600160a01b031660009081526009602090815260408083208289015163ffffffff1684529091528120805492945090612f3383613afb565b9190505550612f7a565b8360e0015163ffffffff16818560600151612f589190613b12565b612f629190613b31565b91508184608001818151612f7691906139d6565b9052505b6040808501516001600160a01b03811660009081526008602052918220805491955084929091612fab9084906139bf565b90915550506001600160a01b0383166000908152600860205260409020546130e55760075460005b818110156130e257846001600160a01b031660078281548110612ff857612ff8613993565b6000918252602090912001546001600160a01b031614156130d05761301e6001836139bf565b811461309c5760076130316001846139bf565b8154811061304157613041613993565b600091825260209091200154600780546001600160a01b03909216918390811061306d5761306d613993565b9060005260206000200160006101000a8154816001600160a01b0302191690836001600160a01b031602179055505b60078054806130ad576130ad613b53565b600082815260209020810160001990810180546001600160a01b03191690550190555b806130da81613a40565b915050612fd3565b50505b8360600151846080015111156131475760405162461bcd60e51b815260206004820152602160248201527f4432442d56455354494e472d434c41494d2d414d4f554e542d4d49534d4154436044820152600960fb1b6064820152608401610800565b6001600160a01b0383166000908152600460205260408120805484929061316f9084906139bf565b909155505060015460408051633fc8cef360e01b815290516001600160a01b0390921691633fc8cef3916004808201926020929091908290030181865afa1580156131be573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906131e291906139ee565b6001600160a01b0316836001600160a01b031614613217576000546132129084906001600160a01b031684612cfa565b613362565b600160009054906101000a90046001600160a01b03166001600160a01b0316633fc8cef36040518163ffffffff1660e01b8152600401602060405180830381865afa15801561326a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061328e91906139ee565b6001600160a01b0316632e1a7d4d836040518263ffffffff1660e01b81526004016132bb91815260200190565b600060405180830381600087803b1580156132d557600080fd5b505af11580156132e9573d6000803e3d6000fd5b5050600080546040519193506001600160a01b0316915084908381818185875af1925050503d806000811461333a576040519150601f19603f3d011682016040523d82523d6000602084013e61333f565b606091505b50509050806133605760405162461bcd60e51b815260040161080090613a0b565b505b6000546020858101518651604080516001600160a01b0389811682529481018890529484169463ffffffff90931693909116917f965de25c186a7b2d3d49b5ced5c89058b0a7bf8779da6ebe45ea019ec9e7cdf6910160405180910390a4505b915091565b6001600160a01b03811681146133dc57600080fd5b50565b600080604083850312156133f257600080fd5b82356133fd816133c7565b946020939093013593505050565b803563ffffffff8116811461341f57600080fd5b919050565b60008060006060848603121561343957600080fd5b6134428461340b565b92506020840135613452816133c7565b929592945050506040919091013590565b60008060006060848603121561347857600080fd5b8335613483816133c7565b92506134916020850161340b565b915060408401356134a1816133c7565b809150509250925092565b6000806000606084860312156134c157600080fd5b83356134cc816133c7565b92506134da6020850161340b565b91506134e86040850161340b565b90509250925092565b6000806000806080858703121561350757600080fd5b8435613512816133c7565b93506135206020860161340b565b92506040850135613530816133c7565b9396929550929360600135925050565b60006020828403121561355257600080fd5b8135610b95816133c7565b6000806040838503121561357057600080fd5b823561357b816133c7565b91506135896020840161340b565b90509250929050565b6000602082840312156135a457600080fd5b5035919050565b60008083601f8401126135bd57600080fd5b50813567ffffffffffffffff8111156135d557600080fd5b6020830191508360208260051b85010111156135f057600080fd5b9250929050565b6000806000806060858703121561360d57600080fd5b8435613618816133c7565b93506136266020860161340b565b9250604085013567ffffffffffffffff81111561364257600080fd5b61364e878288016135ab565b95989497509550505050565b600081518084526020808501945080840160005b838110156136935781516001600160a01b03168752958201959082019060010161366e565b509495945050505050565b600081518084526020808501945080840160005b83811015613693578151875295820195908201906001016136b2565b6040815260006136e1604083018561365a565b82810360208401526136f3818561369e565b95945050505050565b6000806000806080858703121561371257600080fd5b843561371d816133c7565b935061372b6020860161340b565b9250604085013561373b816133c7565b9150606085013561374b816133c7565b939692955090935050565b6000806000806000806080878903121561376f57600080fd5b863561377a816133c7565b95506137886020880161340b565b9450604087013567ffffffffffffffff808211156137a557600080fd5b6137b18a838b016135ab565b909650945060608901359150808211156137ca57600080fd5b506137d789828a016135ab565b979a9699509497509295939492505050565b6000806000606084860312156137fe57600080fd5b8335613809816133c7565b95602085013595506040909401359392505050565b600080600080600060a0868803121561383657600080fd5b61383f8661340b565b9450602086013561384f816133c7565b9350604086013592506138646060870161340b565b91506138726080870161340b565b90509295509295909350565b60008060006060848603121561389357600080fd5b833561389e816133c7565b925060208401356134da816133c7565b600080600080608085870312156138c457600080fd5b84356138cf816133c7565b93506138dd6020860161340b565b92506138eb6040860161340b565b91506138f96060860161340b565b905092959194509250565b60a08152600061391760a083018861365a565b8281036020840152613929818861365a565b9050828103604084015261393d818761369e565b90508281036060840152613951818661369e565b90508281036080840152613965818561369e565b98975050505050505050565b60006020828403121561398357600080fd5b81518015158114610b9557600080fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b6000828210156139d1576139d16139a9565b500390565b600082198211156139e9576139e96139a9565b500190565b600060208284031215613a0057600080fd5b8151610b95816133c7565b6020808252818101527f4432442d4445504f5349542d4641494c45442d544f2d53454e442d4554484552604082015260600190565b6000600019821415613a5457613a546139a9565b5060010190565b600060208284031215613a6d57600080fd5b5051919050565b634e487b7160e01b600052604160045260246000fd5b600063ffffffff808316818516808303821115613aa957613aa96139a9565b01949350505050565b600063ffffffff83811690831681811015613acf57613acf6139a9565b039392505050565b600063ffffffff80831681811415613af157613af16139a9565b6001019392505050565b600081613b0a57613b0a6139a9565b506000190190565b6000816000190483118215151615613b2c57613b2c6139a9565b500290565b600082613b4e57634e487b7160e01b600052601260045260246000fd5b500490565b634e487b7160e01b600052603160045260246000fdfea2646970667358221220b6936800373b5b465a465350c364904709f57dd7f27e19aa7cc149dff4a9bcd664736f6c634300080a0033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "deposit(address,uint32,address,uint256)": {
        "details": "Transfers the token amount to the DaoDepositManager and                          stores the parameters in a Deposit structure",
        "params": {
          "_amount": "The amount that is deposited",
          "_dealId": "The dealId to which this deposit is part of",
          "_module": "The address of the module for which is being deposited",
          "_token": "The address of the token that is deposited"
        }
      },
      "initialize(address)": {
        "details": "Initialize the DaoDepositManager",
        "params": {
          "_dao": "The DAO address to which this contract belongs"
        }
      },
      "setDealManagerImplementation(address)": {
        "details": "Sets a new address for the DealManager implementation",
        "params": {
          "_newDaoDepositManager": "The address of the new DealManager"
        }
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 928,
        "contract": "contracts/DaoDepositManager.sol:DaoDepositManager",
        "label": "dao",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 931,
        "contract": "contracts/DaoDepositManager.sol:DaoDepositManager",
        "label": "dealManager",
        "offset": 0,
        "slot": "1",
        "type": "t_contract(IDealManager)3264"
      },
      {
        "astId": 935,
        "contract": "contracts/DaoDepositManager.sol:DaoDepositManager",
        "label": "tokenBalances",
        "offset": 0,
        "slot": "2",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 943,
        "contract": "contracts/DaoDepositManager.sol:DaoDepositManager",
        "label": "availableDealBalances",
        "offset": 0,
        "slot": "3",
        "type": "t_mapping(t_address,t_mapping(t_address,t_mapping(t_uint32,t_uint256)))"
      },
      {
        "astId": 947,
        "contract": "contracts/DaoDepositManager.sol:DaoDepositManager",
        "label": "vestedBalances",
        "offset": 0,
        "slot": "4",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 955,
        "contract": "contracts/DaoDepositManager.sol:DaoDepositManager",
        "label": "deposits",
        "offset": 0,
        "slot": "5",
        "type": "t_mapping(t_address,t_mapping(t_uint256,t_array(t_struct(Deposit)983_storage)dyn_storage))"
      },
      {
        "astId": 959,
        "contract": "contracts/DaoDepositManager.sol:DaoDepositManager",
        "label": "vestings",
        "offset": 0,
        "slot": "6",
        "type": "t_array(t_struct(Vesting)1000_storage)dyn_storage"
      },
      {
        "astId": 962,
        "contract": "contracts/DaoDepositManager.sol:DaoDepositManager",
        "label": "vestedTokenAddresses",
        "offset": 0,
        "slot": "7",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 966,
        "contract": "contracts/DaoDepositManager.sol:DaoDepositManager",
        "label": "vestedTokenAmounts",
        "offset": 0,
        "slot": "8",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 972,
        "contract": "contracts/DaoDepositManager.sol:DaoDepositManager",
        "label": "tokensPerDeal",
        "offset": 0,
        "slot": "9",
        "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_array(t_struct(Deposit)983_storage)dyn_storage": {
        "base": "t_struct(Deposit)983_storage",
        "encoding": "dynamic_array",
        "label": "struct DaoDepositManager.Deposit[]",
        "numberOfBytes": "32"
      },
      "t_array(t_struct(Vesting)1000_storage)dyn_storage": {
        "base": "t_struct(Vesting)1000_storage",
        "encoding": "dynamic_array",
        "label": "struct DaoDepositManager.Vesting[]",
        "numberOfBytes": "32"
      },
      "t_contract(IDealManager)3264": {
        "encoding": "inplace",
        "label": "contract IDealManager",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_mapping(t_address,t_mapping(t_uint32,t_uint256)))": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => mapping(address => mapping(uint32 => uint256)))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_address,t_mapping(t_uint32,t_uint256))"
      },
      "t_mapping(t_address,t_mapping(t_uint256,t_array(t_struct(Deposit)983_storage)dyn_storage))": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => mapping(uint256 => struct DaoDepositManager.Deposit[]))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_uint256,t_array(t_struct(Deposit)983_storage)dyn_storage)"
      },
      "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => mapping(uint256 => uint256))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_uint256,t_uint256)"
      },
      "t_mapping(t_address,t_mapping(t_uint32,t_uint256))": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => mapping(uint32 => uint256))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_uint32,t_uint256)"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_mapping(t_uint256,t_array(t_struct(Deposit)983_storage)dyn_storage)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => struct DaoDepositManager.Deposit[])",
        "numberOfBytes": "32",
        "value": "t_array(t_struct(Deposit)983_storage)dyn_storage"
      },
      "t_mapping(t_uint256,t_uint256)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_mapping(t_uint32,t_uint256)": {
        "encoding": "mapping",
        "key": "t_uint32",
        "label": "mapping(uint32 => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_struct(Deposit)983_storage": {
        "encoding": "inplace",
        "label": "struct DaoDepositManager.Deposit",
        "members": [
          {
            "astId": 974,
            "contract": "contracts/DaoDepositManager.sol:DaoDepositManager",
            "label": "depositor",
            "offset": 0,
            "slot": "0",
            "type": "t_address"
          },
          {
            "astId": 976,
            "contract": "contracts/DaoDepositManager.sol:DaoDepositManager",
            "label": "token",
            "offset": 0,
            "slot": "1",
            "type": "t_address"
          },
          {
            "astId": 978,
            "contract": "contracts/DaoDepositManager.sol:DaoDepositManager",
            "label": "amount",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256"
          },
          {
            "astId": 980,
            "contract": "contracts/DaoDepositManager.sol:DaoDepositManager",
            "label": "used",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256"
          },
          {
            "astId": 982,
            "contract": "contracts/DaoDepositManager.sol:DaoDepositManager",
            "label": "depositedAt",
            "offset": 0,
            "slot": "4",
            "type": "t_uint32"
          }
        ],
        "numberOfBytes": "160"
      },
      "t_struct(Vesting)1000_storage": {
        "encoding": "inplace",
        "label": "struct DaoDepositManager.Vesting",
        "members": [
          {
            "astId": 985,
            "contract": "contracts/DaoDepositManager.sol:DaoDepositManager",
            "label": "dealModule",
            "offset": 0,
            "slot": "0",
            "type": "t_address"
          },
          {
            "astId": 987,
            "contract": "contracts/DaoDepositManager.sol:DaoDepositManager",
            "label": "dealId",
            "offset": 20,
            "slot": "0",
            "type": "t_uint32"
          },
          {
            "astId": 989,
            "contract": "contracts/DaoDepositManager.sol:DaoDepositManager",
            "label": "token",
            "offset": 0,
            "slot": "1",
            "type": "t_address"
          },
          {
            "astId": 991,
            "contract": "contracts/DaoDepositManager.sol:DaoDepositManager",
            "label": "totalVested",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256"
          },
          {
            "astId": 993,
            "contract": "contracts/DaoDepositManager.sol:DaoDepositManager",
            "label": "totalClaimed",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256"
          },
          {
            "astId": 995,
            "contract": "contracts/DaoDepositManager.sol:DaoDepositManager",
            "label": "startTime",
            "offset": 0,
            "slot": "4",
            "type": "t_uint32"
          },
          {
            "astId": 997,
            "contract": "contracts/DaoDepositManager.sol:DaoDepositManager",
            "label": "cliff",
            "offset": 4,
            "slot": "4",
            "type": "t_uint32"
          },
          {
            "astId": 999,
            "contract": "contracts/DaoDepositManager.sol:DaoDepositManager",
            "label": "duration",
            "offset": 8,
            "slot": "4",
            "type": "t_uint32"
          }
        ],
        "numberOfBytes": "160"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      },
      "t_uint32": {
        "encoding": "inplace",
        "label": "uint32",
        "numberOfBytes": "4"
      }
    }
  }
}